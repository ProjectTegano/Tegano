<!-- Windows -->
	<sect1>
		<title>Building on Windows systems (the NMAKE way)</title>

		<para>
			This is the Unix-style compilation using the Visual
			Studio Command Line Window and NMAKE. This is the
			preferred way currently.
		</para>
		
<!-- prerequisites -->
		<sect2>
			<title>Prerequisites</title>

		<para>
			For building <application>Wolframe</application> on 
			Windows you need at least the following software:
		</para>
		
		<itemizedlist>
			<listitem>
				<para>
					Visual Studio C++ 2008 or newer (<filename>cl.exe</filename>, <filename>rc.exe</filename>, <filename>link.exe</filename> and <filename>nmake.exe</filename>)
				</para>
			</listitem>
			<listitem>
				<para>
					Platform SDK 6.0a or newer
				</para>
			</listitem>
			<listitem>
				<para>
					<filename>mc.exe</filename> may be missing in your path (for instance in Visual Studio 2008
					it was not bundled),
					usually it is available as part of the Platform SDK,
					copy it somewhere into the path
				</para>
			</listitem>
			<listitem>
				<para>Boost 1.48.0 or newer from <ulink url="http://www.boost.org">http://www.boost.org</ulink></para>
			</listitem>
		</itemizedlist>

		<para>
			Depending on the features you want to use you also may need
			the following software:
		</para>

		<itemizedlist>
			<listitem>
				<para>
					The OpenSSL library 0.9.7 or newer, for encryption and authentication,
					<ulink url="http://www.openssl.org">http://www.openssl.org</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The PostgreSQL database client library, version 8.1 or newer, for storing user data
					and authentication data in a PostgreSQL database,
					<ulink url="http://postgresql.org">http://postgresql.org</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The Oracle OCI client library, version 11.2 or newer, for storing user data
					and authentication data in an Oracle database,
					<ulink url="http://www.oracle.com">http://www.oracle.com</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The win-iconv library, version 0.0.3 or newer, needed by libxml2,
					<ulink url="http://code.google.com/p/win-iconv/">http://code.google.com/p/win-iconv/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The libxml2 library, version 2.7.6 or newer, for filtering XML data,
					<ulink url="http://xmlsoft.org/">http://xmlsoft.org/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The libxslt library, version 1.1.26 or newer, for the transformation of
					XML data,
					<ulink url="http://xmlsoft.org/">http://xmlsoft.org/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					Python 3, version 3.3.0 or newer, for writting applications in Python,
					<ulink url="https://www.python.org">https://www.python.org</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The ICU library, version 3.5 or newer, for text normalization and conversion,
					<ulink url="http://site.icu-project.org/">http://site.icu-project.org</ulink>
				</para>
			</listitem>
		</itemizedlist>

		<para>
			For testing the <application>Wolframe</application> software you need:
		</para>

		<itemizedlist>
			<listitem>
				<para>
					Expect 5.40 or newer, for running the Expect tests,
					<ulink url="http://expect.sourceforge.net/">http://expect.sourceforge.net/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					Expect needs ActiveTcl 8.5 or newer, for running the Expect tests,
					<ulink url="http://www.activestate.com/activetcl">http://www.activestate.com/activetcl</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					A working telnet
				</para>
			</listitem>
			<listitem>
				<para>
					A PostgreSQL or Oracle database when you want to run the database tests
				</para>
			</listitem>
		</itemizedlist>

		<para>
			For building Windows packages you need:
		</para>

		<itemizedlist>
			<listitem>
				<para>
					The WIX Toolset, version 3.5 or newer,
					<ulink url="http://wixtoolset.org/">http://wixtoolset.org/</ulink>
				</para>
			</listitem>
		</itemizedlist>
		
		<para>
			For building the documentation and manpages you need:
		</para>

		<itemizedlist>
			<listitem>
				<para>
					Doxygen for developer documentation,
					<ulink url="http://www.doxygen.org">http://www.doxygen.org</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					Docbook 4.5 or newer and the XSL toolchain,
					<ulink url="http://www.docbook.org">http://www.docbook.org</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<filename>xsltproc.exe</filename>, from libxslt
					<ulink url="http://xmlsoft.org/">http://xmlsoft.org/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					The FOP PDF generator for documentation in PDF format,
					<ulink url="http://xmlgraphics.apache.org/fop/">http://xmlgraphics.apache.org/fop/</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					 <filename>hhc.exe</filename>, help compiler from the 'HTML Help Workshop',
					 <ulink url="http://msdn.microsoft.com/en-us/library/windows/desktop/ms670169%28v=vs.85%29.aspx">http://msdn.microsoft.com/en-us/library/windows/desktop/ms670169%28v=vs.85%29.aspx</ulink>
				</para>
			</listitem>
		</itemizedlist>
		
		</sect2>
	
<!-- Basic build instructions -->		
		<sect2>
			<title>Basic build instructions</title>
			
		<para>
			<application>Wolframe</application> can be build in a Visual Studio command line (or better a Platform SDK command line)
			using the following command:

		        <programlisting language='shell'>
	nmake /nologo /f Makefile.W32
			</programlisting>
		</para>

		<para>
			The makefiles understand the standard GNU targets like 'clean', 'distclean', 'test',
			etc. The whole list of options can be seen with:
			
		        <programlisting language='shell'>
	nmake /nologo /f Makefile.W32 help
			</programlisting>
		</para>

		<para>
			Configuration is all done in a file called <filename>config.mk</filename>.
			Examples can be found in the <filename>makefiles/nmake</filename> directory.
		</para>

		<para>
			Optional features are enabled by using 'WITH_XXX' variables when
			calling nmake, e. g. to enable SSL support you call make like this:

		        <programlisting language='shell'>
	nmake /nologo /f Makefile.W32 WITH_SSL=1
			</programlisting>
		</para>
		
		<para>
			On Windows you would rather change the 'OPENSSL_DIR' variable in
			the <filename>config.mk</filename>, for instance:
		        <programlisting language='shell'>
	OPENSSL_DIR = C:\OpenSSL\Win32
			</programlisting>
		</para>

		<para>
			A complete build may look like this:

		        <programlisting language='shell'>
	nmake /nologo /f Makefile.W32 WITH_SSL=1 WITH_EXPECT=1 WITH_LUA=1 ^
		WITH_SQLITE3=1 WITH_PGSQL=1 WITH_ORACLE=1 ^
		WITH_LIBXML2=1 WITH_LIBXSLT=1 ^
		WITH_LIBHPDF=1 WITH_EXAMPLES=1 WITH_ICU=1 WITH_FREEIMAGE=1 ^
		WITH_PYTHON=1 WITH_CJSON=1 WITH_TEXTWOLF=1 ^
		clean all test
			</programlisting>

		</para>
		
		<para>
			We currently have no dependency system for the NMAKE
			build system, so be careful when to use 'clean' to 
			rebuild parts of the system.
		</para>
		
		<para>
			This way of building the system is mainly useful for
			automatized systems and for packaging.
		</para>
		
		</sect2>

<!-- Boost -->
		<sect2>
			<title>Boost</title>
			
				<para>
					Boost (<ulink url="http://www.boost.org">http://www.boost.org</ulink>) is the only
					library which is absolutely required in order to build
					<application>Wolframe</application>.
				</para>


			<sect3>
				<title>Use prebuild version of Boost</title>
				
				<para>
					<ulink url="http://boost.teeks99.com">http://boost.teeks99.com</ulink> provides
					pre-compiled packages of Boost. You can install the library into for instance
					<filename>C:\boost\boost_1_55_0</filename> and set the 'BOOST_XXX' variables in
					<filename>makefiles\nmake\config.mk</filename> as follows:
					
					<programlisting language='shell'>
	BOOST_DIR = C:\Boost\boost_1_55_0
	BOOST_INCLUDE_DIR = $(BOOST_DIR)
	BOOST_LDFLAGS = /LIBPATH:$(BOOST_DIR)\lib32-msvc-10.0
	BOOST_VC_VER = vc100
	BOOST_MT = -mt
					</programlisting>

				</para>
				
				<para>
					Rename the directory <filename>C:\Boost\boost_1_55_0\libs</filename> to
					<filename>C:\Boost\boost_1_55_0\boost</filename>.
				</para>
			</sect3>
			
			<sect3>
				<title>Build your own version of Boost</title>
			</sect3>
			
		</sect2>
	
	</sect1>
		
	<sect1>
		<title>Building on Windows systems (the IDE way)</title>
		
		<para>
			TO BE DEFINED..
		</para>
	</sect1>
	
