<!-- Introduction -->
<chapter>
	<title>Installation via binary packages</title>
	<para>
		This section describes how to install the <application>Wolframe</application> application via
		packages on various operating systems.
	</para>

	<sect1>
		<title>Linux distributions</title>
		<para>
			Linux distributions are currently built on the <acronym>Open Build Server</acronym>
			(<ulink url="http://openbuildservice.org">http://openbuildservice.org</ulink>) and
			on a bunch of virtual machines.
		</para>
		<para>
			The resulting packages and the repository metadata is hosted on Sourceforge
			(<ulink url="http://sourceforge.net">http://sourceforge.net</ulink>).
		</para>
		
		<para>
			The packages are always build with the default system compiler, which
			is currently GNU gcc.
		</para>
		
		<para>
			Packages for proprietary software (like the Oracle database module) have
			to be built manually, they can not be distributed as binary packages due
			to license problems.
		</para>

<!-- RedHat -->
		<sect2>
			<title>RedHat, Fedora, CentOS, Scientific Linux and similar Linux distributions</title>

			<sect3>
				<title>Available packages</title>
				
				<itemizedlist>
					<listitem>
						<para>
							wolframe-&WolframeVersion;.x86_64.rpm: contains the <application>Wolframe</application>
							core server with minimal 3rd party software requirements
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-sqlite3-&WolframeVersion;.x86_64.rpm: the database module for Sqlite3 databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-postgresql-&WolframeVersion;.x86_64.rpm: the database module for PostgreSQL databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libxml2-&WolframeVersion;.x86_64.rpm: filtering module for XML and XSLT (using libxml2/libxslt)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-textwolf-&WolframeVersion;.x86_64.rpm: filtering module for XML (using textwolf)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-cjson-&WolframeVersion;.x86_64.rpm: filtering module for JSON (using cJSON)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-pam-&WolframeVersion;.x86_64.rpm: authentication module for PAM
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-sasl-&WolframeVersion;.x86_64.rpm: authentication module for SASL
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-python-&WolframeVersion;.x86_64.rpm: language bindings for Python
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-lua-&WolframeVersion;.x86_64.rpm: language bindings for Lua
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libhpdf-&WolframeVersion;.x86_64.rpm: printing module using libhpdf
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-freeimage-&WolframeVersion;.x86_64.rpm: image manipuation module using FreeImage
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libclient-&WolframeVersion;.x86_64.rpm: C/C++ client library
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-client-&WolframeVersion;.x86_64.rpm: command line tool
						</para>
					</listitem>
					<listitem>
						<para>
							wolfclient-&WolfclientVersion;.x86_64.rpm: Wolframe graphical frontend
						</para>
					</listitem>
				</itemizedlist>				
			</sect3>
			
			<sect3>
				<title>Prerequisites</title>
				
				<para>
					
				</para>
			</sect3>
			
			<sect3>
				<title>Install binary packages manually</title>
				
				<para>
					Installing the packages via repositories is usually the prefered way.
				</para>	
			</sect3>
			
			<sect3>
				<title>Install from repository</title>
			
			<para>
				First install the repository file for the corresponding distribution
				(as example we choose Centos 6):
				<programlisting language='shell'>
	cd /etc/yum.repos.d
	wget http://sourceforge.net/projects/wolframe/files/repositories/CentOS-6/wolframe.repo
				</programlisting>
			</para>
			
			<para>
				You can list all available Wolframe packages with:
				<programlisting language='shell'>
	yum search wolframe
				</programlisting>
			</para>
			
			<para>
				You install the main Wolframe package with:
				<programlisting language='shell'>
	yum install wolframe
				</programlisting>
			</para>
			
			<para>
				You have to accept the signing key:
				<programlisting language='shell'>
	Retrieving key from http://sourceforge.net/projects/wolframe/files/repositories/CentOS-6/repodata/repomd.xml.key
	Importing GPG key 0x9D404026:
	Userid: "home:wolframe_user OBS Project &lt;home:wolframe_user@build.opensuse.org>"
	From  : http://sourceforge.net/projects/wolframe/files/repositories/CentOS-6/repodata/repomd.xml.key
	Is this ok [y/N]: y
				</programlisting>
			</para>
			
			<para>
				You can start the service with:
				<programlisting language='shell'>
	service wolframed start
				</programlisting>
				
				respectively

				<programlisting language='shell'>
	systemctl start wolframed
				</programlisting>
				
				on newer Fedora systems.
			</para>
			</sect3>

		</sect2>

<!-- Debian -->
		<sect2>
			<title>Debian, Ubuntu and similar Linux distributions</title>

			<sect3>
				<title>Available packages</title>

				<itemizedlist>
					<listitem>
						<para>
							wolframe_&WolframeVersion;_amd64.deb: contains the <application>Wolframe</application>
							core server with minimal 3rd party software requirements
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe_sqlite3-&WolframeVersion;_amd64.deb: the database module for Sqlite3 databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe_postgresql-&WolframeVersion;_amd64.deb: the database module for PostgreSQL databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libxml2_&WolframeVersion;_amd64.deb: filtering module for XML and XSLT (using libxml2/libxslt)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe_textwolf_&WolframeVersion;_amd64.deb: filtering module for XML (using textwolf)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-cjson_&WolframeVersion;_amd64.deb: filtering module for JSON (using cJSON)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-pam_&WolframeVersion;_amd64.deb: authentication module for PAM
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-sasl_&WolframeVersion;_amd64.deb: authentication module for SASL
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-python_&WolframeVersion;_amd64.deb: language bindings for Python
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-lua_&WolframeVersion;_amd64.deb: language bindings for Lua
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libhpdf_&WolframeVersion;_amd64.deb: printing module using libhpdf
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-freeimage_&WolframeVersion;_amd64.deb: image manipuation module using FreeImage
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libclient_&WolframeVersion;_amd64.deb: C/C++ client library
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-client_&WolframeVersion;_amd64.deb: command line tool
						</para>
					</listitem>
					<listitem>
						<para>
							wolfclient_&WolfclientVersion;_amd64.deb: Wolframe graphical frontend
						</para>
					</listitem>
				</itemizedlist>				
			</sect3>
			
			<sect3>
				<title>Prerequisites</title>
				
				<para>
					
				</para>
			</sect3>
			
			<sect3>
				<title>Install binary packages manually</title>
				
				<para>
					Installing the packages via repositories is usually the prefered way.
				</para>					
			</sect3>
			
			<sect3>
				<title>Install from repository</title>

			<para>
				<emphasis role="bold">Note</emphasis>: Some older versions of Ubuntu
				(like Ubuntu 12.04 LTS, 10.04 LTS or Debian 6) have problems to download the metadata files from
				Sourceforge. If you get messages like:
			<programlisting language='shell'>
	W: Failed to fetch http://sourceforge.net/projects/wolframe/files/repositories/Ubuntu-12.04_LTS/Release.gpg  Got a single header line over 360 chars
	Err http://sourceforge.net  Packages               
			</programlisting>
				then you have to download the binaries manually.
			</para>

			<para>
				Add a new repository file <filename>/etc/apt/sources.list.d/wolframe.list</filename>
				which contains:
				<programlisting language='shell'>
	deb http://sourceforge.net/projects/wolframe/files/repositories/Ubuntu-14.04_LTS/ /
				</programlisting>
				(as example we choose Ubuntu 14.04).
			</para>
			
			<para>
				Download the signing key:
				<programlisting language='shell'>
	wget http://wolframe.net/Release.key
				</programlisting>
			</para>
			
			<para>
				Verify that the key then add it with:
				<programlisting language='shell'>
	apt-key add - &lt; Release.key
				</programlisting>
			</para>
			
			<para>
				Update the repository with:
				<programlisting language='shell'>
	apt-get update
				</programlisting>
			</para>

			<para>
				You can list all available Wolframe packages with:
				<programlisting language='shell'>
	apt-cache search wolframe
				</programlisting>
			</para>

			<para>
				You install the main Wolframe package with:
				<programlisting language='shell'>
	apt-get install wolframe
				</programlisting>
			</para>

			<para>
				To start the Wolframe service you have to
				edit the file <filename>/etc/default/wolframe</filename>
				and enable the wolframe daemon there:
				<programlisting language='shell'>
	RUN=yes
				</programlisting>
		
				You can start the service now with:
				<programlisting language='shell'>
	service wolframed start
				</programlisting>
			</para>

			</sect3>
			
		</sect2>

<!-- OpenSUSE -->
		<sect2>
			<title>openSUSE, SLES and similar Linux distributions</title>

			<sect3>
				<title>Available packages</title>
				
				<itemizedlist>
					<listitem>
						<para>
							wolframe-&WolframeVersion;.x86_64.rpm: contains the <application>Wolframe</application>
							core server with minimal 3rd party software requirements
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-sqlite3-&WolframeVersion;.x86_64.rpm: the database module for Sqlite3 databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-postgresql-&WolframeVersion;.x86_64.rpm: the database module for PostgreSQL databases
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libxml2-&WolframeVersion;.x86_64.rpm: filtering module for XML and XSLT (using libxml2/libxslt)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-textwolf-&WolframeVersion;.x86_64.rpm: filtering module for XML (using textwolf)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-cjson-&WolframeVersion;.x86_64.rpm: filtering module for JSON (using cJSON)
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-pam-&WolframeVersion;.x86_64.rpm: authentication module for PAM
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-sasl-&WolframeVersion;.x86_64.rpm: authentication module for SASL
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-python-&WolframeVersion;.x86_64.rpm: language bindings for Python
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-lua-&WolframeVersion;.x86_64.rpm: language bindings for Lua
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libhpdf-&WolframeVersion;.x86_64.rpm: printing module using libhpdf
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-freeimage-&WolframeVersion;.x86_64.rpm: image manipuation module using FreeImage
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-libclient-&WolframeVersion;.x86_64.rpm: C/C++ client library
						</para>
					</listitem>
					<listitem>
						<para>
							wolframe-client-&WolframeVersion;.x86_64.rpm: command line tool
						</para>
					</listitem>
					<listitem>
						<para>
							wolfclient-&WolfclientVersion;.x86_64.rpm: Wolframe graphical frontend
						</para>
					</listitem>
				</itemizedlist>				
			</sect3>
			
			<sect3>
				<title>Prerequisites</title>
				
				<para>
					
				</para>
			</sect3>
			
			<sect3>
				<title>Install binary packages manually</title>
				
				<para>
					Currently installing the packages directly is the prefered way.
				</para>	
			</sect3>
			
			<sect3>
				<title>Install from repository</title>
			
			<para>
				<emphasis role="bold">Note</emphasis>: This is currently not working,
				see issues reported at <ulink url="http://sourceforge.net/p/forge/site-support/6928/">http://sourceforge.net/p/forge/site-support/6928/</ulink>
				and <ulink url="https://github.com/openSUSE/zypper/issues/46">https://github.com/openSUSE/zypper/issues/46</ulink>.			
				
				Download the binary packages manually and install them by hand.
			</para>
			
			<para>
				First we add the Wolframe repository for the corresponding distribution
				(as example we choose OpenSUSE 13.1):
				<programlisting language='shell'>
	zypper addrepo http://sourceforge.net/projects/wolframe/files/repositories/openSUSE_13.1/wolframe.repo
				</programlisting>
			</para>

			<para>
				You may get the following error:
				<programlisting language='shell'>
	/var/adm/mount/AP_0xmiyYP3/projects/wolframe/files/repositories/openSUSE_13.1/wolframe.repo: Line 1 is missing '=' sign
	Is it a .repo file? See http://en.opensuse.org/Standards/RepoInfo for details.
				</programlisting>
				
				Try to download the repo file by hand and install it by hand:
				<programlisting language='shell'>
	wget http://sourceforge.net/projects/wolframe/files/repositories/openSUSE_13.1/wolframe.repo
	zypper addrepo wolframe.repo
				</programlisting>
			</para>

			<para>
				Now refresh your repositories with:
				<programlisting language='shell'>
	zypper refresh
				</programlisting>
			</para>

			<para>
				If you get the following message
				<programlisting language='shell'>
	File 'repomd.xml' from repository 'Wolframe Project (openSUSE_13.1)' is unsigned, continue? [yes/no] (no): yes
				</programlisting>
				
				the signing key could not be downloaded from SourceForge.
				Accept it in this case anyway.				
			</para>
			
			<para>
				If you get the following message
				<programlisting language='shell'>
	File './repodata/ea7cb8d9a0caa2c3d8977919be124accdf55c6b8952ddee72f1b48f4decb0644-primary.xml.gz' not found on medium 'http://sourceforge.net/projects/wolframe/files/repositories/openSUSE_13.1/'

	Abort, retry, ignore? [a/r/i/? shows all options] (a): u^H
	Invalid answer ''. [a/r/i/? shows all options] (a): ?

	a - Skip retrieval of the file and abort current operation.
	r - Try to retrieve the file again.
	i - Skip retrieval of the file and try to continue with the operation without the file.
	u - Change current base URI and try retrieving the file again.

	[a/r/i/? shows all options] (a): u				
				</programlisting>
				
				the Sourceforge redirect didn't work and you have to
				force the baseURL to be a SourceForge mirror like:

				<programlisting language='shell'>
	New URI: http://freefr.dl.sourceforge.net/project/wolframe/repositories/openSUSE_13.1/
				</programlisting>
			</para>

			<para>
				You can list all available Wolframe packages with:
				<programlisting language='shell'>
	zypper se wolframe
	zypper se wolfclient
				</programlisting>
			</para>
			
			<para>
				You install the main Wolframe package with:
				<programlisting language='shell'>
	zypper install wolframe
				</programlisting>
			</para>
						
			<para>
				You can start the service with:
				<programlisting language='shell'>
	service wolframed start
				</programlisting>
				
				respectively

				<programlisting language='shell'>
	systemctl start wolframed
				</programlisting>
				
				on newer openSUSE systems.
			</para>

			</sect3>

		</sect2>

<!-- ArchLinux -->
		<sect2>
			<title>ArchLinux</title>

			<sect3>
				<title>Available packages</title>
				
				<para>
					Wolframe is currently only available as two monolithic packages:
				</para>

				<itemizedlist>
					<listitem>
						<para>
							wolframe-&WolframeVersion;.x86_64.rpm: contains the <application>Wolframe</application>
							core server with all modules for 3rdParty software included,
						</para>
					</listitem>
					<listitem>
						<para>
							wolfclient-&WolfclientVersion;.x86_64.rpm: Wolframe graphical frontend
						</para>
					</listitem>
				</itemizedlist>				
			</sect3>
			
			<sect3>
				<title>Prerequisites</title>
				
				<para>
					
				</para>
			</sect3>
			
			<sect3>
				<title>Install binary packages manually</title>
				
				<para>
					You can use the packages from
					<ulink url="http://sourceforge.net/projects/wolframe/files/wolframe-binaries/">http://sourceforge.net/projects/wolframe/files/wolframe-binaries/</ulink>
					directly.
				</para>	
			</sect3>
			
			<sect3>
				<title>Install from repository</title>
			<para>
				First add the following section to <filename>/etc/pacman.conf</filename>:
				<programlisting language='shell'>
	[wolframe]
	SigLevel = Optional DatabaseRequired
	Server = http://sourceforge.net/projects/wolframe/files/repositories/ArchLinux/$arch
				</programlisting>
			</para>

			<para>
				Fetch and verify the sigining key, import and locally sign the key:
				<programlisting language='shell'>
	wget http://wolframe.net/Release.key
	pacman-key --add Release.key
	pacman-key --lsign 9D404026
				</programlisting>
				
				Alternatively you can also disable the verification of the signature
				of the database by removing 'DatabaseRequired' from the 'SigLevel'
				option.
			</para>
			
			<para>
				Update the repository data with:
				<programlisting language='shell'>
	pacman -Syy
				</programlisting>
			</para>
			<para>
				You can list all available Wolframe packages with:
				<programlisting language='shell'>
	pacman -Sl wolframe
				</programlisting>
			</para>
			
			<para>
				You install the main Wolframe package with:
				<programlisting language='shell'>
	pacman -S wolframe
				</programlisting>
			</para>
						
			<para>
				You can start the service with:

				<programlisting language='shell'>
	systemctl start wolframed
				</programlisting>
			</para>
			</sect3>

			<sect3>
				<title>Install from the AUR</title>
			<para>
				You can also customize your build by downloading the 
				build files from the AUR at <ulink url="https://aur.archlinux.org/packages/?O=0&amp;K=wolframe">https://aur.archlinux.org/packages/?O=0&amp;K=wolframe</ulink>
				and customize them to your needs.
			</para>

			<para>
				For instance:

				<programlisting language='shell'>
	yaourt -G wolframe
	cd wolframe
	makepkg 
				</programlisting>
			</para>
			</sect3>
		</sect2>

<!-- Slackware -->
		<sect2>
			<title>Slackware</title>

			<sect3>
				<title>Available packages</title>
				
				<para>
					Wolframe is currently only available as two monolithic packages:
				</para>

				<itemizedlist>
					<listitem>
						<para>
							wolframe-&WolframeVersion;.x86_64.rpm: contains the <application>Wolframe</application>
							core server with all modules for 3rdParty software included,
						</para>
					</listitem>
					<listitem>
						<para>
							wolfclient-&WolfclientVersion;.x86_64.rpm: Wolframe graphical frontend
						</para>
					</listitem>
				</itemizedlist>				
			</sect3>
			
			<sect3>
				<title>Prerequisites</title>
				
				<para>
					
				</para>
			</sect3>
			
			<sect3>
				<title>Install binary packages manually</title>

			<para>
				Download the package file (we picked 64-bit Slackware 14 for example):
				<programlisting language='shell'>
	wget http://sourceforge.net/projects/wolframe/files/wolframe-binaries/&WolframeVersion;/Slackware-14/x86_64/wolframe-&WolframeVersion;-x86_64.tgz
				</programlisting>
			</para>

			<para>
				You install the Wolframe package with:
				<programlisting language='shell'>
	installpkg wolframe-&WolframeVersion;-x86_64.tgz 
				</programlisting>
			</para>
			
			<para>
				You can start the service with:

				<programlisting language='shell'>
	/etc/rc.d/rc.wolframed start
				</programlisting>
			</para>

			</sect3>
		</sect2>

	</sect1>

	<sect1>
		<title>Other Unix systems</title>

<!-- FreeBSD -->
		<sect2>
			<title>FreeBSD</title>
			<para>
				Download the package file (we choose 64-bit FreeBSD 9 for example):
				<programlisting language='shell'>
	wget http://sourceforge.net/projects/wolframe/files/wolframe-binaries/&WolframeVersion;/FreeBSD-9/x86_64/wolframe-&WolframeVersion;-x86_64.tgz
				</programlisting>
			</para>

			<para>
				You install the Wolframe package with:
				<programlisting language='shell'>
	pkg_add wolframe-&WolframeVersion;-x86_64.tgz 
				</programlisting>
			
				The FreeBSD packages contain the whole server and the whole client respectively.
			</para>
			
			<para>
				You can start the service with:

				<programlisting language='shell'>
	/usr/local/etc/rc.d/wolframed onestart
				</programlisting>
			</para>

			<para>
				To start the Wolframe service at system boot time
				you have to edit the file <filename>/etc/rc.conf</filename>
				and enable the wolframe daemon there with:
				<programlisting language='shell'>
	wolframed_enable="YES"
				</programlisting>
		
				You can start the service now with:
				<programlisting language='shell'>
	service wolframed start
				</programlisting>
			</para>

		</sect2>

<!-- NetBSD -->
		<sect2>
			<title>NetBSD</title>
			<para>
				Download the package file (we choose 64-bit NetBSD 6 for example):
				<programlisting language='shell'>
	wget http://sourceforge.net/projects/wolframe/files/wolframe-binaries/&WolframeVersion;/NetBSD-6/x86_64/wolframe-&WolframeVersion;-x86_64.tgz
				</programlisting>
			</para>

			<para>
				You install the Wolframe package with:
				<programlisting language='shell'>
	pkg_add wolframe-&WolframeVersion;-x86_64.tgz 
				</programlisting>
			
				The NetBSD packages contain the whole server and the whole client respectively.
			</para>
			
			<para>
				You can start the service with:

				<programlisting language='shell'>
	/usr/pkg/share/examples/rc.d/wolframed onestart
				</programlisting>
			</para>

			<para>
				To start the Wolframe service at system boot time
				you have to edit the file <filename>/etc/rc.conf</filename>
				and enable the wolframe daemon there with:
				<programlisting language='shell'>
	wolframed=YES
				</programlisting>
				
				Copy the example startup script to the final place:
				
				<programlisting language='shell'>
	cp /usr/pkg/share/examples/rc.d/wolframed /etc/rc.d/
				</programlisting>
	
				You can start the service now with:
				<programlisting language='shell'>
	/etc/rc.d/wolframed
				</programlisting>
			</para>

		</sect2>

<!--				
		<sect2>
			<title>Solaris</title>
			<para></para>
		</sect2>
-->		
	</sect1>

<!--	
	<sect1>
		<title>Windows</title>
		<para>
		</para>
	</sect1>
-->
</chapter>
