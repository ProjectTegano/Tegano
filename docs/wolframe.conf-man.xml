<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY username "Wolframe Team">
<!ENTITY email "contact@wolframe.net">
<!ENTITY year "2010-2014">
<!ENTITY section "5">
<!-- TITLE should be something like "User commands" or similar (see
	http://www.tldp.org/HOWTO/Man-Page/q2.html). --><!ENTITY dhtitle "Wolframe User Manual">
<!ENTITY dhucpackage "wolframe">
<!ENTITY dhpackage "wolframe.conf">
]>
<!--
************************************************************************

 Copyright (C) 2011 - 2014 Project Wolframe.
 All rights reserved.

 This file is part of Project Wolframe.

 Commercial Usage
    Licensees holding valid Project Wolframe Commercial licenses may
    use this file in accordance with the Project Wolframe
    Commercial License Agreement provided with the Software or,
    alternatively, in accordance with the terms contained
    in a written agreement between the licensee and Project Wolframe.

 GNU General Public License Usage
    Alternatively, you can redistribute this file and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Wolframe is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Wolframe.  If not, see <http://www.gnu.org/licenses/>.

 If you have questions regarding the use of this file, please contact
 Project Wolframe.

************************************************************************
-->
<refentry>
	<refentryinfo>
		<title>&dhtitle;</title>
		<productname>&dhpackage;</productname>
		<authorgroup>
			<author>
				<contrib>This manual was written by the Wolframe Team.</contrib>
				<address>
					<email>&email;</email>
				</address>
			</author>
		</authorgroup>
		<copyright>
			<year>&year;</year>
			<holder>&username;</holder>
		</copyright>
		<legalnotice>
			<para>The authors grant permission to copy, distribute and/or modify this manual page
				under the terms of the GNU General Public License Version 3 or newer (GPLv3).
			</para>
		</legalnotice>
	</refentryinfo>
	<refmeta>
		<refentrytitle>&dhucpackage;</refentrytitle>
		<manvolnum>&section;</manvolnum>
	</refmeta>
	<refnamediv>
		<refname>&dhpackage;</refname>
		<refpurpose>Wolframe server configuration file</refpurpose>
	</refnamediv>
	<refsynopsisdiv>
		<cmdsynopsis>
			<command>/etc/wolframe/wolframe.conf</command>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsect1 id="description">
		<title>DESCRIPTION</title>
		<para>
			This manual page documents briefly the configuration
			option of the Wolframe system.
		</para>
		<refsect2 id="GlobalOptions">
			<title>Global configuration options</title>
			<variablelist>			

				<varlistentry>
					<term>
						<option>ServerSignature</option>
					</term>				
					<listitem>
						<para>
							If set to 'On' the server prints the name of the server as
							first element of the greeting in the protocol.
							Possible values are 'On' or 'Off'.
						</para>
					</listitem>
				</varlistentry>										

				<varlistentry>
					<term>
						<option>ServerTokens</option>
					</term>				
					<listitem>
						<para>
							Specifies how the server signature looks like when
							'ServerSignature' is set to 'On'. Note: In a production
							environment you should be careful which information you
							reveal over the protocol to a possible attacker!
						</para>
						<para>
							Possible values are:
							<variablelist>
								<varlistentry>
									<term>None</term>
									<listitem>
										<para>
											Print nothing in the greeting line but the name of the
											software 'Wolframe'.
										</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>ProductOnly</term>
									<listitem>
										<para>
											Print the name of the product implemented in Wolframe
											and Wolframe itself.
										</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>Major</term>
									<listitem>
										<para>
											Print only the major version of Wolframe.
										</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>Minor</term>
									<listitem>
										<para>
											Print major and minor version of Wolframe.
										</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>Revision</term>
									<listitem>
										<para>
											Print major, minor and revision of Wolframe.
										</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>OS</term>
									<listitem>
										<para>
											Print all information, including the operating system
											Wolframe is running on.
										</para>
									</listitem>
								</varlistentry>
							</variablelist>
						</para>
					</listitem>
				</varlistentry>

			</variablelist>
		</refsect2>
	</refsect1>

<!-- configuration options: from most to more to less to least important -->

	<refsect1 id="options">
		<title>OPTIONS</title>
		<para>
			The configuration of the wolframe daemon or service
			is separated into sections. Some sections like
			'LoadModules' always exist, others only exist
			if a module has been loaded.
		</para>
		
<!--
LoadModules	{						; modules to be loaded by the server
	module mod_db_postgresql
-->
		<refsect2 id="LoadModules">
			<title>LoadModules</title>
		<para>
			The 'LoadModules' section contains directives to 
			extend the system with loadable modules. Those
			can be new database modules, new scripting languages,
			document filters and processors,
			authentication/authorization/audit modules
			and other 3rdParty bindings, etc.
		</para>
		
		<para>
			The following directives are valid in this section:
			<variablelist>
				<varlistentry>
					<term>
						<option>directory <replaceable>module_directory</replaceable></option>
					</term>
					<listitem>
						<para>
							Load modules from directory <replaceable>module_directory</replaceable>
							instead of searching for modules in the standard system module directory
							of Wolframe.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>

					<term>
						<option>module <replaceable>module_name</replaceable></option>
					</term>
					<listitem>
						<para>
							Load module <replaceable>module_name</replaceable>. Note: You
							don't have to specify the module extension like '.so'.
						</para>
						<para>
							The <replaceable>module_name</replaceable> can contain a
							relative path. The module path is always caculated
							relatively to the <replaceable>module_directory</replaceable>
							or to the default installation path for Wolframe modules.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
		</refsect2>

<!--
; Logging configuration
logging	{
	; log level for console (stderr) logging
	stderr	{
		level	INFO
	}

	; log level for file logging
	logFile	{
		filename	/tmp/wolframed.log
		level		NOTICE
	}

	; syslog facility, identifier and log level
	syslog	{
		ident		wolframed
		facility	LOCAL2
		level		INFO
	}
}
-->
		<refsect2 id="logging">
			<title>logging</title>
		<para>
			In the 'logging' section you can configure ways
			of the Wolframe server to log.
		</para>
		
		<para>
			There are logging channels named '<emphasis role="bold">stderr</emphasis>' (for
			foreground mode only!), '<emphasis role="bold">logFile</emphasis>' to log to a
			simple text file and '<emphasis role="bold">syslog</emphasis>' to log to the
			system log.
		</para>
		
		<para>
			The following directives are valid in this section:
			<variablelist>
				<varlistentry>
					<term>
						<option>level <replaceable>log_level</replaceable></option>
					</term>
					<listitem>
						<para>
							Log only messages up to the level <replaceable>log_level</replaceable>.
							Possible log levels are	'FATAL', 'ALERT', 'CRITICAL', 'SEVERE', 'ERROR',
							'WARNING', 'NOTICE', 'INFO, 'DEBUG', 'TRACE',
							'DATA' or 'DATA2'.
						</para>
						<para>
							Note: This is the only directive which must be understood by all logging channels.
						</para>
					</listitem>				
				</varlistentry>
				
				<varlistentry>
					<term>
						<option>filename (logFile) <replaceable>file_name</replaceable></option>
					</term>
					<listitem>
						<para>
							Write log message to the file denoted by
							<replaceable>file_name</replaceable>.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>
						<option>ident (syslog) <replaceable>ident</replaceable></option>
					</term>
					<listitem>
						<para>
							The syslog identifier to tag the log entries with.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>
						<option>facility (syslog) <replaceable>ident</replaceable></option>
					</term>
					<listitem>
						<para>
							The syslog facility to tag the log entries with. Usual
							facilities are 'LOCAL0' to 'LOCAL7', 'USER', 'DAEMON' or similar.
						</para>
						<para>
							Consult the <citerefentry><refentrytitle>openlog</refentrytitle><manvolnum>3</manvolnum></citerefentry>
							man page to see what facilities are available on your system.
						</para>
					</listitem>
				</varlistentry>
				
				
			</variablelist>
		</para>
		
		</refsect2>

<!--
; Unix daemon parameters. This section is not valid for windows
daemon {
;	user		nobody
;	group		nobody
	pidFile		/tmp/wolframed.pid
}
-->		
		<refsect2 id="daemon">
			<title>daemon</title>
		<para>
			The 'daemon' section sets the behaviour of the
			Wolframe server as a Unix daemon.
		</para>
		<para>
			The following directives are valid in this section:
			<variablelist>
				<varlistentry>
					<term>
						<option>user <replaceable>user</replaceable></option>
					</term>
					<listitem>
						<para>
							Run the Wolframe daemon under permissions of
							the Unix user <replaceable>user</replaceable>.
						</para>
					</listitem>
				</varlistentry>
				
				<varlistentry>
					<term>
						<option>group <replaceable>group</replaceable></option>
					</term>
					<listitem>
						<para>
							Run the Wolframe daemon under permissions of
							the Unix group <replaceable>group</replaceable>.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>
						<option>pidFile <replaceable>pid_file</replaceable></option>
					</term>
					<listitem>
						<para>
							Where to store the PID daemon lock file. Note that
							<replaceable>pid_file</replaceable> must be in a location
							with enough rights for the <replaceable>user</replaceable>
							to create the PID file!
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
		</refsect2>
	</refsect1>

<!--


; Ports 7649-7671 and 7934-7966 are unassigned according to IANA (last updated 2010-03-11).
; Let's use 7660 for unencrypted connections and 7960 for SSL connections.
; Note that 7654 seems to be used by Winamp.
listen	{
	maxConnections	3					; Maximum number of simultaneous connections (clients).
								; Default is the OS limit. This is the global (total) value.
								; Set it to 0 to disable (to use the system limit)
	threads		7					; Number of threads for serving client connections.
								; Default 4
	socket	{
		address		*
		port		7661
		maxConnections	2				; Maximum number of simultaneous connections (clients)
								; for this socket. Default is the OS limit.
	}
	socket	{
		address		localhost
;		address		::1
		port		7662
		name		"Interface 1"			; Interfaces can be named for AAA purposes
	}

	SSLsocket	{
		address		0.0.0.0
		port		7961
		name		"Interface 1"			; Many interfaces can have the same name and
								; they can be referred as one group in AAAA
		; SSL parameters: required if SSLsocket is defined
		certificate	../tests/SSL/wolframed.crt	; Server certificate file (PEM)
		key		../tests/SSL/wolframed.key	; Server key file (PEM)
		CAdirectory	../tests/SSL/CAdir		; Directory holding CA certificate files
		CAchainFile	../tests/SSL/CAchain.pem	; SSL CA chain file
		verify		ON				; Require and verify client certificate
	}
	SSLsocket	{
		address		127.0.0.1
		port		7962
		name		"Interface 2"
		maxConnections	2
		certificate	../tests/SSL/wolframed.crt
		key		../tests/SSL/wolframed.key
		; CAdirectory	../tests/SSL/CAdir		; It's not necessary to define both
		CAchainFile	../tests/SSL/CAchain.pem	; CAdirectory and CAchainFile.
		verify		OFF
	}
}


; Database configuration
database	{
	PostgreSQL	{					; PostgreSQL database.
		identifier	pgdb				; Database identifier. Used by other definitions.
		host		localhost			; Database host. Uses the unix socket if not defined.
		port		5432				; Database port. Uses the default port if not defined.
		name		wolframe			; Database name.
		user		wolframe			; Database user.
		password	blabla				; Password for the database user.
		connectionTimeout 10				; connection timeout in seconds
								; 0 to disable, default 30s
		connections	5				; number of parallel connections to the database
								; Default is 4
		acquireTimeout	10				; maximum allowed time to acquire a database
								; connection
	}

	SQLite	{
		identifier	sqlitedb			; All databases defined independently must have
								; an identifier
;		file		/var/lib/wolframe/primary.db	; SQLite database file
		file		primary.db
	}
}


; Authentication, authorization, accounting and auditing configuration
aaaa	{
	authentication	{
		allowAnonymous	yes
		database	pgdb
;		database	sqlitedb
	}

	audit	{
		file		../var/tmp/wolframe.audit
		database	sqlitedb
	}
	; There are no configurations for authorization and accounting
	; as authorization uses the authentication information and the
	; server database and accounting should be derived from audit
	; information
}

; The thing that does the real job ;)
Processor	{
	database		pgdb
;	database		sqlitedb
	EchoProcessor	{
		timeout		10
	}
}

-->


	<refsect1 id="bugs">
		<!-- Or use this section to tell about upstream BTS. -->
		<title>BUGS</title>
			<para>
				Find issues and bugs on <acronym>Github</acronym> at
				<ulink url="https://github.com/Wolframe/Wolframe/issues"/>.
			</para>
	</refsect1>
	<refsect1 id="see_also">
		<title>SEE ALSO</title>
		<!-- In alpabetical order. -->
		<para>
			<citerefentry>
				<refentrytitle>wolframed</refentrytitle>
				<manvolnum>8</manvolnum>
			</citerefentry>
		</para>
	</refsect1>
</refentry>
