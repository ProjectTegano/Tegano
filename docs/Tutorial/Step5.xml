<!-- step 5 -->

<sect1>
	<title>Step 5 - Implement client side customer list</title>	

	<para>
		It's time now to get something visual working, so we start to add a first
		simple interface to our qtclient.
	</para>
	
	<para>
		For this we need the 'Qt designer'. We open the file 
		<filename>~/tutorial/client/init.ui</filename> again
		draw a single button with the text "Customer List":
	</para>

	<screenshot>
		<screeninfo>Step 5 customer button</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_button.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_button.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject> 
		</mediaobject>
	</screenshot>
	
	<para>
		We add a dynamic property 'form' of type String to this button, which has
		the value 'customers':
	</para>

	<screenshot>
		<screeninfo>Step 5 customer button properties</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_button_form_property.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_button_form_property.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject> 
		</mediaobject>
	</screenshot>
	
	<para>
		When we save the form and start the qtclient, we get (after logging in) the
		first page with the "Customer List" button. Pressing it gives the error
		message:
	</para>
	
	<screenshot>
		<screeninfo>Step 5 customer button generates an error message</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_button_pressed_error.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_button_pressed_error.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject> 
		</mediaobject>
	</screenshot>

	<para>
		This means we have to define a new form called
		<filename>customers.ui</filename>, which will
		show the list of customers, for now we leave it empty. When we start the
		qtclient and press the "Customer List" button again, we see that
		the form gets changed to the "customer" form (empty).
	</para>

	<para>
		We add now a <classname>QTreeWidget</classname> item to the
		<filename>customer.ui</filename> form and choose a grid layout
		for the whole form. We change the name of the widget to 'customer':
	</para>

	<screenshot>
		<screeninfo>Step 5 customer form with tree widget and name</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_treewidget_and_name.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_treewidget_and_name.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject>
		</mediaobject>
	</screenshot>

	<para>
		We also disable the 'rootIsDecorated' tick (we have a list, not a tree of customers).
		We also set 'selectionMode' to 'SingleSelection' and 'selectionBehaviour'
		to 'selectRows' to get the default expected behaviour of a list.
	</para>
	
	<para>
		Now we change the columns of the list (by double clicking into the widget data area):
	</para>
	
	<screenshot>
		<screeninfo>Step 5 customer form with tree widget and columns names</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_column_names.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_column_names.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject>
		</mediaobject>
	</screenshot>

	<para>
		Now we add the 'doctype' and 'rootelement' dynamic properties to the
		customer list widget, so that it loads the domain when the form is loaded.
		The request to send is the 'CustomerListRequest' with root element 'customer'
		we have configured before in the server:
	</para>

	<screenshot>
		<screeninfo>Step 5 customer form, doctype and root element</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customer_doctype_rootelement.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customer_doctype_rootelement.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject>
		</mediaobject>
	</screenshot>
	
	<para>
		When we start the qtclient, we get a funny error message:
	</para>

	<programlisting language='shell'>
	Error calling procedure: unknown attribute  (id) at /customer
	</programlisting>

	<para>
		This means we have to configure the id attribute in the server in the simpleform.
		The qtclient adds an id automatically to the customer tag in the request.
	</para>
	
	<para>
		We declare the customer to have an optional 'id' attribute in
		<filename>CustomerListRequest.simpleform</filename>:
	</para>
	
	<programlisting language='shell'>
	FORM CustomerListRequest
	{
		customer {
			id ?@string
		}
	}
	</programlisting>
	
	<para>
		If we restart the server and run qtclient again we get the desired result:
	</para>

	<screenshot>
		<screeninfo>Step 5 customer list</screeninfo>
		<mediaobject>
			<imageobject role="html"> 
				<imagedata fileref="images/Tutorial/step5_customers_list.png" format="PNG"/>
			</imageobject> 
			<imageobject role="fo"> 
				<imagedata fileref="images/Tutorial/step5_customers_list.png" format="PNG" width="100%" scalefit="1"/>
			</imageobject>
		</mediaobject>
	</screenshot>

</sect1>
