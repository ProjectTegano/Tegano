<sect1>
<title>The Standard Command Handler</title>
	<sect2>
	<title>Introduction</title>
	<para>The declarations of the <code>Wolframe</code> Standard Command Handler are specified in a program 
		source file with the extension '.dmap' that is declared in the configuration.
	</para>
	</sect2>
	<sect2>
		<title>Example Configuration</title>
		<para>The following configuration declares a program <code>example.tdl</code> to contain the function
		declarations for the provider that can be called by the command handler. It declares the database with
		name <code>pgdb</code> to be used as the database for transactions. It loads a description 
		<code>example.dmap</code> that will declare the mappings of commands to the filters used and functions 
		called. It specifies the filter with name <code>libxml2</code> to be used for documents of format XML and
		the filter with name <code>cjson</code> to be used for documents of format JSON, if
		not specified else in <code>example.dmap</code>.

		<programlisting language='sql'>
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="examples/SDKTutorial/standardCommandHandler.conf" parse="text" />
		</programlisting>
		</para>
	</sect2>

	<sect2>
	<title>Example Program</title>
	<para>The following example defines two commands. The first one links a document type "InsertCustomer" to
		a global transaction "doInsertCustomer", the input is validated with the data form "Customer". 
		The result is not mapped through a form but returned as it is. The second example command links a 
		document type "SelectCustomer" to a global transaction "doSelectCustomer". The input is not validated
		and the transaction output if serialized with help of the form "Customer".
	</para>
	<para>
		<programlisting language='text'>
		<xi:include  xmlns:xi="http://www.w3.org/2001/XInclude" href="examples/SDKTutorial/first_example.directmap" parse="text" />
		</programlisting>
	</para>
	</sect2>

	<sect2>
	<title>Language Description</title>
	<para>
		The direct map commands are assignments to names identifying the document type (XML DOCTYPE declaration).
		If not spezified in the command argument this name identyfies also the form used for input validation.
		After the '=' follows a function call declation with a command identifier followed by a single argument
		in '(' ')' brackets. The argument is an identifier naming the inputfilter optionally followed by ':' and
		an identifier specifying the name of the Input form used for validation.
		After the closing function call bracket ')' follows optionally a name of the data form used
		to validate and serialize the function call output.
	</para>
	</sect2>

	<sect2>
	<title>Syntax as EBNF</title>
	<para>
		<productionset>
		<title>Tokens</title>

		<production xml:id="dmIdentifier" continuation='restarts'>
		<lhs>Identifier</lhs>
		<rhs>
			( ['A'-'Z'] | ['a'-'z'] | ['0'-'9'] | '_' ) +
		</rhs>
		</production>

		<production xml:id="dmFilter">
		<lhs>Filter</lhs>
		<rhs>
			<nonterminal def="#dmIdentifier">Identifier</nonterminal>
		</rhs>
		</production>

		<production xml:id="dmFunction">
		<lhs>Function</lhs>
		<rhs>
			<nonterminal def="#dmIdentifier">Identifier</nonterminal>
		</rhs>
		</production>

		<production xml:id="dmForm">
		<lhs>Form</lhs>
		<rhs>
			<nonterminal def="#dmIdentifier">Identifier</nonterminal>
		</rhs>
		</production>
		</productionset>

		<productionset>
		<title>Declarations</title>

		<production xml:id="dmCall">
		<lhs>Call</lhs>
		<rhs>
			<nonterminal def="#dmIdentifier">Identifier</nonterminal>
			'='
			<nonterminal def="#dmFunction">Function</nonterminal>
			'('
				<nonterminal def="#dmFilter">Filter</nonterminal>
				(
					( ':' <nonterminal def="#dmForm">Form</nonterminal> )
				|
				)
			')'
			(
				( ':' <nonterminal def="#dmForm">Form</nonterminal> )
			|
			)
		</rhs>
		</production>

		<production xml:id="dmProgram">
		<lhs>Program</lhs>
		<rhs>
			(
			  (
			    <nonterminal def="#dmCall">Call</nonterminal>
			    <nonterminal def="#dmProgram">Program</nonterminal>
			  )
			|
			  <nonterminal def="#dmCall">Call</nonterminal>
			)
		</rhs>
		</production>

		</productionset>

	</para>
	</sect2>
	<para></para>
</sect1>
<beginpage/>

