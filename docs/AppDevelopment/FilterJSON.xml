<sect2>
<title>JSON filter</title>
	<sect3>
	<title>Introduction</title>
	<para>You can use <application>JSON</application> for data filters in the logic tier of <application>Wolframe</application>.
	The standard <application>JSON</application> filter of <application>Wolframe</application> is called <application>cjson</application> and 
	based on the library <application>cJSON</application> (<ulink url="http://sourceforge.net/projects/cjson">http://sourceforge.net/projects/cjson</ulink>) from Dave Gamble.
	</para>
	</sect3>
	
	<sect3>
	<title>Character set encodings</title>
	<para>Without explicitly specified, the <application>cjson</application> filter support the following character set 
	encodings. For character set encodings that are not in the list, please ask the <application>Wolframe</application> team.
	<itemizedlist>
	<listitem><para><abbrev>UTF-8</abbrev> or</para></listitem>
	<listitem><para><abbrev>UTF-16LE</abbrev> or</para></listitem>
	<listitem><para><abbrev>UTF-16</abbrev> (<abbrev>UTF-16BE</abbrev>) or</para></listitem>
	<listitem><para><abbrev>UTF-32LE</abbrev> (<abbrev>UCS-4LE</abbrev>) or</para></listitem>
	<listitem><para><abbrev>UTF-32</abbrev> (<abbrev>UTF-32BE</abbrev> or <abbrev>UCS-4BE</abbrev>) or</para></listitem>
	</itemizedlist>
	</para>
	</sect3>

	<sect3>
	<title>Configuration</title>
	<para>For using the JSON filter based <application>cJSON</application>, you have to load the module 'mod_filter_cjson'. 
	For this you add the following line to the LoadModules section of your <application>Wolframe</application> configuration:
		<programlisting language='text'>
		<xi:include  xmlns:xi="http://www.w3.org/2001/XInclude" href="examples/AppDevelop/cfg_filter_JSON.conf" parse="text" />
		</programlisting>
	</para>
	</sect3>
</sect2>

