<chapter>
<title>Filters</title>
<para>
Filters describe the transformation of serialized data to a unified element sequence
of hierarchical structured data and to document meta data and back. The application does 
not care about data formats as long as there exists a filter providing the unified form 
of data. This unified data format is represented as iterator visiting the nodes of the 
document tree and plus a contract to level out language differences. 
Additioally each document type has some metadata defined. A filter interprets all meta data
it understands (his) and uses them for output.
</para>
<para>
This chapter describes how filters for different data formats are linked to the logic tier. For each data format
supported by <application>Wolframe</application> one or more filter type is introduced. 
</para>
<para>
After reading this chapter you should be able to handle different document formats and encodings 
in the logic tier of <application>Wolframe</application>. You will know how to add programs for scriptable filters
like <acronym>XSLT</acronym>.
</para>
<para>
Be aware that you have to configure a data filter of the logic tier in <application>Wolframe</application> before using it.
Each chapter introducing a filter type will have a section that describes how the server configuration 
of <application>Wolframe</application> has to be extended for its availability.
</para>
	&AppFilterXML;
	&AppFilterJSON;
	&AppFilterXSLT;
</chapter>
