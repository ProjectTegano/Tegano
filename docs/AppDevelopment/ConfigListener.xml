<sect1>
	<title>Server configuration</title>
	<para>
	The server configuration is defined in the <code>Server</code>
	section. The server specifies the set of sockets a client can
	connect to. It defines rules for how and from where a client
	can connect and the properties of the connection. 
	</para>
	<para>
	It also defines some global settings listed in the following table:

	<table frame="all" width="100%">
		<title>Global server settings</title>
		<tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="3*"/>
		<thead>
			<row>
				<entry>Name</entry>
				<entry>Description</entry>
			</row>
		</thead>

		<tbody>
			<row>
				<entry>MaxConnections</entry>
				<entry>The maximum number of total simultaneous connections (clients). If not specified the default is used. The default is the operating system limit.</entry>
			</row>
			<row>
				<entry>Threads</entry>
				<entry>Number of threads for serving client connections.</entry>
			</row>
		</tbody>
		</tgroup>
	</table>
	Here is an example configuration of the server global settings:
	<programlisting language='text'>
Server
{
    MaxConnections 12
    Threads 7
}
	</programlisting>
	The server has two types of sockets to configure in the
	sections <code>Listen</code> and <code>ListenSSL</code>.
	<code>ListenSSL</code> is describing a secure connection 
	with a transport layer encryption based on SSL/TLS. 
	<code>Listen</code> on the other hand is describing a plain 
	TCP/IP connection.
	In the following two sections they are introduced:
	</para>

	<sect2>
	<title>Listen</title>
	<para>In the subsections named <code>Listen</code> of the server
	configuration we define sockets providing plain connections based 
	on TCP/IP. The following table describes the attributes you can set 
	for plain TCP/IP connections:
	<table frame="all" width="100%">
		<title>Listen settings</title>
		<tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="3*"/>
		<thead>
			<row>
				<entry>Name</entry>
				<entry>Description</entry>
			</row>
		</thead>

		<tbody>
			<row>
				<entry>Address</entry>
				<entry>Listening address (IPv4 or IPv6) 
					of the server. '127.0.0.1' and '::1' 
					stand for the loopback address 
					(IPv4 an IPv6 respectively).
					The listener wildcards '*' 
					or '0.0.0.0' (IPv4) or '::' (IPv6) 
					are also accepted.</entry>
			</row>
			<row>
				<entry>Port</entry>
				<entry>Connection port. Ports 7649-7671 and 7934-7966 
				are unassigned according to IANA (last updated 2010-03-11).
				The default ports are 7661 for unencrypted connections and
				7961 for SSL connections. Note that 7654 seems to be used by Winamp.
				</entry>
			</row>
			<row>
				<entry>Identifier</entry>
				<entry>Identifier that can be referenced
					in authorization functions to 
					classify connections and to define
					authorization based on it.</entry>
			</row>
			<row>
				<entry>MaxConnections</entry>
				<entry>(optional) The maximum number of simultaneus 
					connections for this socket.</entry>
			</row>
			<row>
				<entry>Restrictions</entry>
				<entry>(optional) Defines the subsection containing IP
					restrictions on the connection. If not 
					defined, the connection is allowed 
					from everywhere. The configuration
					of IP restrictions will be defined in the
					<link linkend='sectionIpRestrictions'>section IP restrictions</link>.</entry>
			</row>
		</tbody>
		</tgroup>
	</table>
	The following <code>Listen</code> configuration shows an example plain TCP/IP
	connection definition:
	<programlisting language='text'>
Server
{
    Listen
    {
        Address localhost
        Port 7661
        Identifier "Interface 1"
        Restrictions {
            allow 192.168.201.0/24
        }
    }
}
	</programlisting>
	</para>
	</sect2>


	<sect2>
	<title>ListenSSL</title>
	<para>In the subsections named <code>ListenSSL</code> of the 
	server configuration we define sockets providing secured connections
	with full transport layer encryption based on SSL/TLS.
	The following table describes the attributes you can set for secured
	connections. The first five attributes are the same as for
	sockets configured as plain TCP/IP (<code>Listen</code>) 
	as shown before:
	<table frame="all" width="100%">
		<title>ListenSSL settings</title>
		<tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="3*"/>
		<thead>
			<row>
				<entry>Name</entry>
				<entry>Description</entry>
			</row>
		</thead>

		<tbody>
			<row>
				<entry>Address</entry>
				<entry>Listening address (IPv4 or IPv6) of 
					the server. '127.0.0.1' and '::1'
					stand for the loopback address 
					(IPv4 an IPv6 respectively).
					The listener wildcards '*'
					or '0.0.0.0' (IPv4) or '::' (IPv6)
					are also accepted.</entry>
			</row>
			<row>
				<entry>Port</entry>
				<entry>Connection port. Ports 7649-7671 and 7934-7966 
				are unassigned according to IANA (last updated 2010-03-11).
				The default ports are 7661 for unencrypted connections and
				7961 for SSL connections. Note that 7654 seems to be used by Winamp.
				</entry>
			</row>
			<row>
				<entry>Identifier</entry>
				<entry>Identifier that can be referenced
					in authorization functions to classify 
					connections and to define authorization
					based on it.</entry>
			</row>
			<row>
				<entry>MaxConnections</entry>
				<entry>The maximum number of simultaneus
					connections for this port.</entry>
			</row>
			<row>
				<entry>Restrictions</entry>
				<entry>Defines the subsection containing 
					IP restrictions on the connection. 
					If not defined, the connection is 
					allowed from everywhere. The configuration
					of IP restrictions will be defined in the
					<link linkend='sectionIpRestrictions'>section IP restrictions</link>.</entry>
			</row>
			<row>
				<entry>Certificate</entry>
				<entry>File with the SSL certificate</entry>
			</row>
			<row>
				<entry>Key</entry>
				<entry>File with the SSL key</entry>
			</row>
			<row>
				<entry>CAdirectory</entry>
				<entry>Directory holding the CA certificate
					files.</entry>
			</row>
			<row>
				<entry>CAchainFile</entry>
				<entry>SSL CA chain file</entry>
			</row>
			<row>
				<entry>Verify</entry>
				<entry>ON/OFF switch to enabe/disable 
					client certificate verification.</entry>
			</row>
		</tbody>
		</tgroup>
	</table>
	The following configuration shows an example <code>ListenSSL</code>
	definition:
	<programlisting language='text'>
Server
{
    ListenSSL
    {
        Address localhost
        Port 7961
        Identifier "Interface 1"
        MaxConnections 2
        Certificate SSL/wolframed.crt
        key SSL/wolframed.key
        CAchainFile SSL/CAchain.pem
        Verify Off
    }
}
	</programlisting>
	</para>
	</sect2>
 
	<sect2 id='sectionIpRestrictions'>
	<title>IP restrictions</title>
	<para>IP restrictions are defined as sub section <code>restrictions</code>
	of the socket configurations (<code>Listener</code> and <code>ListenerSSL</code>)
	in the server configuration.
	</para>
	<table frame="all" width="100%">
		<title>Restrictions settings</title>
		<tgroup cols="3">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="1*"/>
		<colspec colnum="3" colname="col3" colwidth="3*"/>
		<thead>
			<row>
				<entry>Name</entry>
				<entry>Argument</entry>
				<entry>Description</entry>
			</row>
		</thead>

		<tbody>
			<row>
				<entry>Allow</entry>
				<entry>IP address with optional network mask</entry>
				<entry>Define an IP or network address
				as allowed to connect from, if not explicitely
				defined by a <code>Deny</code> directive.
				If no <code>allow</code> is specified then 
				all IPs are allowed to connect from, if not
				explicitely excluded by a <code>deny</code>
				directive. So no <code>allow</code> is equivalent
				to <code>allow all</code>
				</entry>
			</row>
			<row>
				<entry>Deny</entry>
				<entry>IP address with optional network mask</entry>
				<entry>Define an IP or network address
				as forbidden to connect from. If a
				<code>deny</code> directive refers to
				an IP explictely defined or part of an
				<code>allow</code> then the <code>deny</code>
				is stronger and overrides the <code>allow</code>
				declaration.
				</entry>
			</row>
		</tbody>
		</tgroup>
	</table>

	</sect2>
</sect1>

