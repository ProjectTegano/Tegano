Description: lexical_cast: warning: ISO C++ does not support the '%lg' gnu_printf format
 The following code produces a warning if compiled with GCC (4.7.0) and -Wall -std=c++98 -pedantic:

include <boost/lexical_cast.hpp>

int main()
{
    boost::lexical_cast<std::string>(double(4.2));
    return 0;
}
Patch adapted from upstream changeset 78308

Author: peter
Bug: 671409
Forwarded: https://svn.boost.org/trac/boost/ticket/6852


--- a/boost/lexical_cast.hpp	2012-02-04 12:04:45.000000000 -0600
+++ b/boost/lexical_cast.hpp	2012-05-04 21:32:04.535330135 -0500
@@ -1286,7 +1286,8 @@
             bool shl_float(float val,T* out)
             {   using namespace std;
                 if (put_inf_nan(start,finish,val)) return true;
-                finish = start + sprintf(out,"%.*g", static_cast<int>(boost::detail::lcast_get_precision<float >()), val );
+		const double val_as_double = val;
+                finish = start + sprintf(out,"%.*g", static_cast<int>(boost::detail::lcast_get_precision<float >()), val_as_double );
                 return finish > start;
             }
 
@@ -1294,7 +1295,7 @@
             bool shl_double(double val,T* out)
             {   using namespace std;
                 if (put_inf_nan(start,finish,val)) return true;
-                finish = start + sprintf(out,"%.*lg", static_cast<int>(boost::detail::lcast_get_precision<double >()), val );
+                finish = start + sprintf(out,"%.*g", static_cast<int>(boost::detail::lcast_get_precision<double >()), val );
                 return finish > start;
             }
 #ifndef __MINGW32__
