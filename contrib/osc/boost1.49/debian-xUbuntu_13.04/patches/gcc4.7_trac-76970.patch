Description: Unordered: Use C++11 allocator_traits with gcc 4.7.
 Upstream changeset 76970.
Author: danieljames
Bug: 671409
Forwarded: https://svn.boost.org/trac/boost/changeset/76970

trunk/boost/unordered/detail/allocator_helpers.hpp

Index: trunk/boost/unordered/detail/allocator_helpers.hpp
===================================================================
--- a/boost/unordered/detail/allocator_helpers.hpp
+++ b/boost/unordered/detail/allocator_helpers.hpp
@@ -28,5 +28,12 @@
 
 #if !defined(BOOST_UNORDERED_USE_ALLOCATOR_TRAITS)
-#define BOOST_UNORDERED_USE_ALLOCATOR_TRAITS 0
+#   if defined(__GXX_EXPERIMENTAL_CXX0X__) && \
+            (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 7))
+#       define BOOST_UNORDERED_USE_ALLOCATOR_TRAITS 1
+#   endif
+#endif
+
+#if !defined(BOOST_UNORDERED_USE_ALLOCATOR_TRAITS)
+#   define BOOST_UNORDERED_USE_ALLOCATOR_TRAITS 0
 #endif
 

TabularUnified trunk/libs/unordered/test/unordered/allocator_traits.cpp

Index: trunk/libs/unordered/test/unordered/allocator_traits.cpp
===================================================================
--- a/libs/unordered/test/unordered/allocator_traits.cpp
+++ b/libs/unordered/test/unordered/allocator_traits.cpp
@@ -133,5 +133,5 @@
         std::make_unsigned<std::ptrdiff_t>::type>));
 #else
-    BOOST_MPL_ASSERT((boost::is_same<traits::size_type, std::size_t>));
+    BOOST_MPL_ASSERT((boost::is_same<typename traits::size_type, std::size_t>));
 #endif
     BOOST_MPL_ASSERT((boost::is_same<traits::difference_type, std::ptrdiff_t>));

