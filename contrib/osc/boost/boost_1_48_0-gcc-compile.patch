diff -rauN boost_1_48_0/boost/interprocess/errors.hpp boost_1_48_0-gcc-compile-patch/boost/interprocess/errors.hpp
--- boost_1_48_0/boost/interprocess/errors.hpp	2011-08-30 17:46:15.000000000 +0200
+++ boost_1_48_0-gcc-compile-patch/boost/interprocess/errors.hpp	2012-10-06 11:45:54.000000000 +0200
@@ -113,7 +113,7 @@
    corrupted_error,
    not_such_file_or_directory,
    invalid_argument,
-   timeout_when_locking_error,
+   timeout_when_locking_error
 };
 
 typedef int    native_error_t;
diff -rauN boost_1_48_0/boost/locale/conversion.hpp boost_1_48_0-gcc-compile-patch/boost/locale/conversion.hpp
--- boost_1_48_0/boost/locale/conversion.hpp	2011-07-12 15:57:36.000000000 +0200
+++ boost_1_48_0-gcc-compile-patch/boost/locale/conversion.hpp	2012-10-06 11:46:15.000000000 +0200
@@ -143,7 +143,7 @@
             norm_nfc,   ///< Canonical decomposition followed by canonical composition
             norm_nfkd,  ///< Compatibility decomposition
             norm_nfkc,  ///< Compatibility decomposition followed by canonical composition.
-            norm_default = norm_nfc, ///< Default normalization - canonical decomposition followed by canonical composition
+            norm_default = norm_nfc ///< Default normalization - canonical decomposition followed by canonical composition
         } norm_type;
        
         ///
diff -rauN boost_1_48_0/boost/locale/date_time_facet.hpp boost_1_48_0-gcc-compile-patch/boost/locale/date_time_facet.hpp
--- boost_1_48_0/boost/locale/date_time_facet.hpp	2011-07-12 15:57:36.000000000 +0200
+++ boost_1_48_0-gcc-compile-patch/boost/locale/date_time_facet.hpp	2012-10-06 13:11:36.000000000 +0200
@@ -51,7 +51,7 @@
                     second,                     ///< second [0..59]
                     week_of_year,               ///< The week number in the year
                     week_of_month,              ///< The week number within current month
-                    first_day_of_week,          ///< First day of week, constant, for example Sunday in US = 1, Monday in France = 2
+                    first_day_of_week           ///< First day of week, constant, for example Sunday in US = 1, Monday in France = 2
                 };
 
             } // marks
@@ -133,7 +133,7 @@
                 least_maximum,      ///< The last maximal value for this period, For example for Gregorian calendar
                                     ///< day it is 28
                 actual_maximum,     ///< Actual maximum, for it can be 28, 29, 30, 31 for day according to current month
-                absolute_maximum,   ///< Maximal value, for Gregorian day it would be 31.
+                absolute_maximum    ///< Maximal value, for Gregorian day it would be 31.
             } value_type;
 
             ///
@@ -141,7 +141,7 @@
             ///
             typedef enum {
                 move,   ///< Change the value up or down effecting others for example 1990-12-31 + 1 day = 1991-01-01
-                roll,   ///< Change the value up or down not effecting others for example 1990-12-31 + 1 day = 1990-12-01
+                roll    ///< Change the value up or down not effecting others for example 1990-12-31 + 1 day = 1990-12-01
             } update_type;
 
             ///
