diff -rauN boost_1_48_0/boost/thread/xtime.hpp boost_1_48_0-TIME_UTC-patch/boost/thread/xtime.hpp
--- boost_1_48_0/boost/thread/xtime.hpp	2008-06-18 15:01:08.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/boost/thread/xtime.hpp	2013-05-08 11:48:16.365028299 +0200
@@ -20,7 +20,7 @@
 
 enum xtime_clock_types
 {
-    TIME_UTC=1
+    TIME_UTC_=1
 //    TIME_TAI,
 //    TIME_MONOTONIC,
 //    TIME_PROCESS,
@@ -68,7 +68,7 @@
 
 inline int xtime_get(struct xtime* xtp, int clock_type)
 {
-    if (clock_type == TIME_UTC)
+    if (clock_type == TIME_UTC_)
     {
         *xtp=get_xtime(get_system_time());
         return clock_type;
diff -rauN boost_1_48_0/libs/container/test/util.hpp boost_1_48_0-TIME_UTC-patch/libs/container/test/util.hpp
--- boost_1_48_0/libs/container/test/util.hpp	2011-08-30 17:49:49.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/container/test/util.hpp	2013-05-08 11:48:16.721028321 +0200
@@ -71,7 +71,7 @@
 boost::xtime xsecs(int secs)
 {
    boost::xtime ret;
-   boost::xtime_get(&ret, boost::TIME_UTC);
+   boost::xtime_get(&ret, boost::TIME_UTC_);
    ret.sec += secs;
    return ret;
 }
diff -rauN boost_1_48_0/libs/interprocess/test/condition_test_template.hpp boost_1_48_0-TIME_UTC-patch/libs/interprocess/test/condition_test_template.hpp
--- boost_1_48_0/libs/interprocess/test/condition_test_template.hpp	2009-10-15 20:45:53.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/interprocess/test/condition_test_template.hpp	2013-05-08 11:48:16.489028307 +0200
@@ -49,8 +49,8 @@
     const int NANOSECONDS_PER_MILLISECOND = 1000000;
 
     boost::xtime xt;
-    int ret = boost::xtime_get(&xt, boost::TIME_UTC);
-    assert(ret == static_cast<int>(boost::TIME_UTC));(void)ret;
+    int ret = boost::xtime_get(&xt, boost::TIME_UTC_);
+    assert(ret == static_cast<int>(boost::TIME_UTC_));(void)ret;
     nsecs += xt.nsec;
     msecs += nsecs / NANOSECONDS_PER_MILLISECOND;
     secs += msecs / MILLISECONDS_PER_SECOND;
diff -rauN boost_1_48_0/libs/interprocess/test/util.hpp boost_1_48_0-TIME_UTC-patch/libs/interprocess/test/util.hpp
--- boost_1_48_0/libs/interprocess/test/util.hpp	2011-08-30 17:50:42.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/interprocess/test/util.hpp	2013-05-08 11:48:16.461028305 +0200
@@ -71,7 +71,7 @@
 boost::xtime xsecs(int secs)
 {
    boost::xtime ret;
-   boost::xtime_get(&ret, boost::TIME_UTC);
+   boost::xtime_get(&ret, boost::TIME_UTC_);
    ret.sec += secs;
    return ret;
 }
diff -rauN boost_1_48_0/libs/spirit/classic/test/grammar_mt_tests.cpp boost_1_48_0-TIME_UTC-patch/libs/spirit/classic/test/grammar_mt_tests.cpp
--- boost_1_48_0/libs/spirit/classic/test/grammar_mt_tests.cpp	2008-06-22 17:05:38.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/spirit/classic/test/grammar_mt_tests.cpp	2013-05-08 11:48:16.441028304 +0200
@@ -70,7 +70,7 @@
 {
     static long const nanoseconds_per_second = 1000L*1000L*1000L;
     boost::xtime xt;
-    boost::xtime_get(&xt, boost::TIME_UTC);
+    boost::xtime_get(&xt, boost::TIME_UTC_);
     xt.nsec+=1000*1000*milliseconds;
     while (xt.nsec > nanoseconds_per_second)
     {
diff -rauN boost_1_48_0/libs/spirit/classic/test/owi_mt_tests.cpp boost_1_48_0-TIME_UTC-patch/libs/spirit/classic/test/owi_mt_tests.cpp
--- boost_1_48_0/libs/spirit/classic/test/owi_mt_tests.cpp	2008-06-22 17:05:38.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/spirit/classic/test/owi_mt_tests.cpp	2013-05-08 11:48:16.413028302 +0200
@@ -86,7 +86,7 @@
             return test_size;
 
         boost::xtime now;
-        boost::xtime_get(&now, boost::TIME_UTC);
+        boost::xtime_get(&now, boost::TIME_UTC_);
         unsigned long seconds = now.sec - start_time.sec;
         if (seconds < 4)
         {
@@ -187,7 +187,7 @@
 void concurrent_creation_of_objects()
 {
     {
-        boost::xtime_get(&start_time, boost::TIME_UTC);
+        boost::xtime_get(&start_time, boost::TIME_UTC_);
         boost::thread thread1(callable_ref(test1));
         boost::thread thread2(callable_ref(test2));
         boost::thread thread3(callable_ref(test3));
diff -rauN boost_1_48_0/libs/thread/example/starvephil.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/example/starvephil.cpp
--- boost_1_48_0/libs/thread/example/starvephil.cpp	2006-09-14 23:51:01.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/example/starvephil.cpp	2013-05-08 11:48:16.601028314 +0200
@@ -50,7 +50,7 @@
                       << "very hot ..." << std::endl;
         }
         boost::xtime xt;
-        boost::xtime_get(&xt, boost::TIME_UTC);
+        boost::xtime_get(&xt, boost::TIME_UTC_);
         xt.sec += 3;
         boost::thread::sleep(xt);
         m_chickens += value;
@@ -85,7 +85,7 @@
             std::cout << "(" << clock() << ") Chef: cooking ..." << std::endl;
         }
         boost::xtime xt;
-        boost::xtime_get(&xt, boost::TIME_UTC);
+        boost::xtime_get(&xt, boost::TIME_UTC_);
         xt.sec += 2;
         boost::thread::sleep(xt);
         {
@@ -111,7 +111,7 @@
             if (m_id > 0)
             {
                 boost::xtime xt;
-                boost::xtime_get(&xt, boost::TIME_UTC);
+                boost::xtime_get(&xt, boost::TIME_UTC_);
                 xt.sec += 3;
                 boost::thread::sleep(xt);
             }
diff -rauN boost_1_48_0/libs/thread/example/tennis.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/example/tennis.cpp
--- boost_1_48_0/libs/thread/example/tennis.cpp	2009-10-19 11:18:13.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/example/tennis.cpp	2013-05-08 11:48:16.625028315 +0200
@@ -104,7 +104,7 @@
     boost::thread thrdb(thread_adapter(&player, (void*)PLAYER_B));
 
     boost::xtime xt;
-    boost::xtime_get(&xt, boost::TIME_UTC);
+    boost::xtime_get(&xt, boost::TIME_UTC_);
     xt.sec += 1;
     boost::thread::sleep(xt);
     {
diff -rauN boost_1_48_0/libs/thread/example/thread.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/example/thread.cpp
--- boost_1_48_0/libs/thread/example/thread.cpp	2006-09-14 23:51:01.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/example/thread.cpp	2013-05-08 11:48:16.557028311 +0200
@@ -14,7 +14,7 @@
     void operator()()
     {
         boost::xtime xt;
-        boost::xtime_get(&xt, boost::TIME_UTC);
+        boost::xtime_get(&xt, boost::TIME_UTC_);
         xt.sec += m_secs;
 
         boost::thread::sleep(xt);
diff -rauN boost_1_48_0/libs/thread/example/xtime.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/example/xtime.cpp
--- boost_1_48_0/libs/thread/example/xtime.cpp	2006-09-14 23:51:01.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/example/xtime.cpp	2013-05-08 11:48:16.581028313 +0200
@@ -10,7 +10,7 @@
 int main(int argc, char* argv[])
 {
     boost::xtime xt;
-    boost::xtime_get(&xt, boost::TIME_UTC);
+    boost::xtime_get(&xt, boost::TIME_UTC_);
     xt.sec += 1;
     boost::thread::sleep(xt); // Sleep for 1 second
 }
diff -rauN boost_1_48_0/libs/thread/src/pthread/thread.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/src/pthread/thread.cpp
--- boost_1_48_0/libs/thread/src/pthread/thread.cpp	2011-06-06 10:28:31.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/src/pthread/thread.cpp	2013-05-08 11:48:16.697028320 +0200
@@ -350,7 +350,7 @@
                     cond.timed_wait(lock, xt);
 #   endif
                     xtime cur;
-                    xtime_get(&cur, TIME_UTC);
+                    xtime_get(&cur, TIME_UTC_);
                     if (xtime_cmp(xt, cur) <= 0)
                         return;
                 }
@@ -365,7 +365,7 @@
             BOOST_VERIFY(!pthread_yield());
 #   else
             xtime xt;
-            xtime_get(&xt, TIME_UTC);
+            xtime_get(&xt, TIME_UTC_);
             sleep(xt);
 #   endif
         }
diff -rauN boost_1_48_0/libs/thread/src/pthread/timeconv.inl boost_1_48_0-TIME_UTC-patch/libs/thread/src/pthread/timeconv.inl
--- boost_1_48_0/libs/thread/src/pthread/timeconv.inl	2010-04-01 17:04:15.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/src/pthread/timeconv.inl	2013-05-08 11:48:16.669028318 +0200
@@ -20,8 +20,8 @@
 inline void to_time(int milliseconds, boost::xtime& xt)
 {
     int res = 0;
-    res = boost::xtime_get(&xt, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&xt, boost::TIME_UTC_);
+    BOOST_ASSERT(res == boost::TIME_UTC_);
 
     xt.sec += (milliseconds / MILLISECONDS_PER_SECOND);
     xt.nsec += ((milliseconds % MILLISECONDS_PER_SECOND) *
@@ -57,8 +57,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    BOOST_ASSERT(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
     {
@@ -88,8 +88,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    BOOST_ASSERT(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
         milliseconds = 0;
@@ -110,8 +110,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    BOOST_ASSERT(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
         microseconds = 0;
diff -rauN boost_1_48_0/libs/thread/src/win32/timeconv.inl boost_1_48_0-TIME_UTC-patch/libs/thread/src/win32/timeconv.inl
--- boost_1_48_0/libs/thread/src/win32/timeconv.inl	2007-11-25 19:38:02.000000000 +0100
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/src/win32/timeconv.inl	2013-05-08 11:48:16.649028317 +0200
@@ -17,8 +17,8 @@
 inline void to_time(int milliseconds, boost::xtime& xt)
 {
     int res = 0;
-    res = boost::xtime_get(&xt, boost::TIME_UTC);
-    assert(res == boost::TIME_UTC);
+    res = boost::xtime_get(&xt, boost::TIME_UTC_);
+    assert(res == boost::TIME_UTC_);
 
     xt.sec += (milliseconds / MILLISECONDS_PER_SECOND);
     xt.nsec += ((milliseconds % MILLISECONDS_PER_SECOND) *
@@ -54,8 +54,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    assert(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    assert(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
     {
@@ -85,8 +85,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    assert(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    assert(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
         milliseconds = 0;
@@ -107,8 +107,8 @@
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&cur, boost::TIME_UTC);
-    assert(res == boost::TIME_UTC);
+    res = boost::xtime_get(&cur, boost::TIME_UTC_);
+    assert(res == boost::TIME_UTC_);
 
     if (boost::xtime_cmp(xt, cur) <= 0)
         microseconds = 0;
diff -rauN boost_1_48_0/libs/thread/test/test_xtime.cpp boost_1_48_0-TIME_UTC-patch/libs/thread/test/test_xtime.cpp
--- boost_1_48_0/libs/thread/test/test_xtime.cpp	2008-07-08 09:44:55.000000000 +0200
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/test/test_xtime.cpp	2013-05-08 11:48:16.513028308 +0200
@@ -17,8 +17,8 @@
 {
     boost::xtime xt1, xt2, cur;
     BOOST_CHECK_EQUAL(
-        boost::xtime_get(&cur, boost::TIME_UTC),
-        static_cast<int>(boost::TIME_UTC));
+        boost::xtime_get(&cur, boost::TIME_UTC_),
+        static_cast<int>(boost::TIME_UTC_));
 
     xt1 = xt2 = cur;
     xt1.nsec -= 1;
@@ -42,14 +42,14 @@
     boost::xtime orig, cur, old;
     BOOST_CHECK_EQUAL(
         boost::xtime_get(&orig,
-            boost::TIME_UTC), static_cast<int>(boost::TIME_UTC));
+            boost::TIME_UTC_), static_cast<int>(boost::TIME_UTC_));
     old = orig;
 
     for (int x=0; x < 100; ++x)
     {
         BOOST_CHECK_EQUAL(
-            boost::xtime_get(&cur, boost::TIME_UTC),
-            static_cast<int>(boost::TIME_UTC));
+            boost::xtime_get(&cur, boost::TIME_UTC_),
+            static_cast<int>(boost::TIME_UTC_));
         BOOST_CHECK(boost::xtime_cmp(cur, orig) >= 0);
         BOOST_CHECK(boost::xtime_cmp(cur, old) >= 0);
         old = cur;
diff -rauN boost_1_48_0/libs/thread/test/util.inl boost_1_48_0-TIME_UTC-patch/libs/thread/test/util.inl
--- boost_1_48_0/libs/thread/test/util.inl	2008-11-03 23:29:39.000000000 +0100
+++ boost_1_48_0-TIME_UTC-patch/libs/thread/test/util.inl	2013-05-08 11:48:16.537028310 +0200
@@ -28,8 +28,8 @@
     const int NANOSECONDS_PER_MILLISECOND = 1000000;
 
     boost::xtime xt;
-    if (boost::TIME_UTC != boost::xtime_get (&xt, boost::TIME_UTC))
-        BOOST_ERROR ("boost::xtime_get != boost::TIME_UTC");
+    if (boost::TIME_UTC_ != boost::xtime_get (&xt, boost::TIME_UTC_))
+        BOOST_ERROR ("boost::xtime_get != boost::TIME_UTC_");
 
     nsecs += xt.nsec;
     msecs += nsecs / NANOSECONDS_PER_MILLISECOND;
