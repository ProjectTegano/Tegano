OPEN SOURCE PRODUCT MUSTS:
Core:
	- Filetype recognition (?)
	- Connection handling reorganization of existing code (MBa)
	- Context for processors in provider (MBa & PF)
	- AAAA stuff to a certain level (MBa, support for protocol PF)
	- Client UI files from server with protocol support as ordinary wolframe function call - eliminate process specific stuff from core (PF & MBa)
	- For different type of transactions (get UI files, process request, etc..) chose DB in context
Processors:
	- Implement basic DateTime type in Variant
	- Bring up .NET to the new Variant types (tostring for custom data types for the moment)
	- .NET tests (PF,ABa as victim)
	- TDL tests (PF)
	- Python (ABa, with support PF)
	- Custom data type documentation and BigFxp tests (PF)
Build&Deployment:
	- Build and deployment and OS support (pkg mgmt) for update process (ABa, MBa)



OPEN SOURCE PRODUCT NICE TO HAVE:
- Printing (impl + documentation)
- Lua State Copy instead of parsing script every time
	(http://stackoverflow.com/questions/8936369/compile-lua-code-store-bytecode-then-load-and-execute-it)


TO THINK ABOUT IN THE FUTURE:
Add namespaces to TDL,Lua (special global variable in Lua script)
Python (check how module names = namespaces are set when embeding python)


