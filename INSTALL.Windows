Prerequisites
-------------

- Visual C++ (cl, link and nmake), VC8 or later
- Platform SDK 6.0a or later
- boost 1.43.0 or later
- optionally (WITH_SSL) openssl 0.9.8 or later
- optionally (WITH_LUA) lua 5.1.4 with LuaCoco-1.1.6
  (integrated in subdir 'lua')
- optionally (WITH_QT) Qt 4, 4.5.x or later
- for optional authentication mechanisms:
  - optionally (WITH_SQLITE3)
  - optionally (WITH_PGSQL)
- optionally (WITH_EXPECT) Expect and Tcl 8.4 or later
- optionally (WITH_LIBXML2)
- optionally for packaging: Wix 3.5 or later

Boost
-----

Get boost from http://boostpro.com or http://boost.teeks99.com

Install for instance into C:\Program Files\Boost\Boost_1_44

configure 'makefile\nmake\config.mk' and 
set BOOST_DIR to C:\Program Files\Boost\Boost_1_44

Compile and install boost
-------------------------

If you insist to compile Boost from scratch, do the following
in a Visual Studio C++ command line:

bootstrap
.\bjam

set BOOST_DIR to C:\<myhome>\boost-1_44_0

Notes on special Boost versions
-------------------------------

Boost 1.44
----------

Boost 1.44 needs an essential patch, see:
https://svn.boost.org/trac/boost/ticket/4487

Compile and install openssl
---------------------------

Easiest is to get the native Windows binary version from

http://www.slproweb.com/products/Win32OpenSSL.html

Do not copy the OpenSSL binaries to the Windows system directory, copy
them to the Bin subdirectory of the OpenSSL installation directory!

Install Tcl and Expect
----------------------

Download from http://www.activestate.com/activetcl/ 
(32-bit version, the 64-bit version had no Expect available,
at least at the time of writting)

Install ActiveTcl 8.5 to C:\tcl

Then adapt in 'makefiles\nmake\config.mk':

TCP_DIR = C:\tcl

Install Expect 1.1 with:

cd c:\Tcl\bin
teacup install Expect

Telnet is not enable by default, enable it in "Control Panel",
"Windows Features" or call:

pkgmgr /iu:"TelnetClient"

Compile and install Qt
----------------------

Easiest is to get a precompiled MSVC version of the SDK.
But this version is missing SSL support.

If you insist on compiling on your own:

Get the MinGW version of the SDK.
If you want SSL support, get also OpenSSL (see above).

(The Openssl parts in INCLUDE, LIB and configure are needed if you enable SSL with WITH_SSL=1)

Make sure the SDK variables for compilation and linking are set correctly:

set PLATFORM_SDK=D:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2
set OPENSSL_DIR=D:\Program Files\OpenSSL-1.0.0d
set INCLUDE=%INCLUDE%;%PLATFORM_SDK%\include;%OPENSSL_DIR%\include
set LIB=%LIB%;%PLATFORM_SDK%\lib;%OPENSSL_DIR%\lib
set PATH=%PATH%;%PLATFORM_SDK%\bin

Clean up first the MinGW build with:

nmake confclean
del bin\*.dll bin\*.exe
del lib\*.a

Configure and build it with:

configure -platform win32-msvc2008 -release -openssl
nmake

See also http://qtnode.net/wiki/Qt4_with_Visual_Studio.

Finally adapt QT_DIR in 'makefiles\nmake\config.mk'.

Postgresql C client library
---------------------------

Install all in one package. You may have to install libpq64
as an add-on using the Stack Builder.

Adapt PGSQL_DIR in 'makefiles\nmake\config.mk'.

LibXML2
-------

32-bit Windows ports are available at http://www.zlatkovic.com/libxml.en.html.

Adapt LIBXML2_DIR in 'makefiles\nmake\config.mk'.

Note that 'libxml2' depends on 'libiconv' and 'zlib'! Also adapt
ICONV_DIR and ZLIB_DIR.

Make sure, all DLLs are executable otherwise you get an Application Load Error 0x22.

For 64-bit you have to compile your own libraries.
