#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=4

# This has to be exported to make some magic below work.
export DH_OPTIONS

export WOLFRAME_PARAMS=BOOST_DIR=/usr libdir=/usr/lib/$(DEB_HOST_MULTIARCH) WITH_SSL=1 WITH_SQLITE3=1 WITH_LUA=1 WITH_PAM=1 WITH_SASL=1 WITH_PGSQL=1 WITH_QT=1 WITH_LIBXML2=1 WITH_LIBXSLT=1 WITH_EXAMPLES=1

export BOOST_VERSION=1.46.1

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	WOLFRAME_PARAMS += -j$(NUMJOBS)
endif

build: build-stamp
build-stamp:
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE) help
	$(MAKE) $(WOLFRAME_PARAMS) config
	$(MAKE) LDFLAGS=-Wl,-rpath=/usr/lib/$(DEB_HOST_MULTIARCH)/wolframe \
		LDFLAGS=-Wl,-rpath=/usr/lib/$(DEB_HOST_MULTIARCH) $(WOLFRAME_PARAMS) all
	cd docs; $(MAKE) $(WOLFRAME_PARAMS) doc-doxygen; cd ..

	# --- end custom part for compiling

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Add here commands to clean up after the build process.
	$(MAKE) clean || true
	# --- end custom part for cleaning up

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package
	# The DESTDIR Has To Be Exactly  /usr/src/packages/BUILD/debian/<nameOfPackage>

	# main package
	$(MAKE) install $(WOLFRAME_PARAMS) \
		sysconfdir=/etc \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe

	# database modules depend on the database client library, each of them in its own package
	cd src/modules/database; $(MAKE) uninstall $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe; \
		cd ../../..

	# authentication modules depend on strange libraries, each of the in its own package
	cd src/modules/authentication/pam; $(MAKE) uninstall $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe; \
		cd ../../../..
	cd src/modules/authentication/sasl; $(MAKE) uninstall $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe; \
		cd ../../../..

	# Qt client depends on X11/Qt, so it deserves it's own package
	cd clients; $(MAKE) uninstall $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe; \
		cd ..

	# module database sqlite3
	cd src/modules/database/sqlite3; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-sqlite3; \
		cd ../../../..
	mkdir /usr/src/packages/BUILD/debian/wolframe-sqlite3/DEBIAN
	cp debian/shlibs /usr/src/packages/BUILD/debian/wolframe-sqlite3/DEBIAN

	# module database postgresql
	cd src/modules/database/postgresql; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-postgresql; \
		cd ../../../..
	mkdir /usr/src/packages/BUILD/debian/wolframe-postgresql/DEBIAN
	cp debian/shlibs /usr/src/packages/BUILD/debian/wolframe-postgresql/DEBIAN

	# authentication module for PAM
	cd src/modules/authentication/pam; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-pam; \
		cd ../../../..
	mkdir /usr/src/packages/BUILD/debian/wolframe-pam/DEBIAN
	cp debian/shlibs /usr/src/packages/BUILD/debian/wolframe-pam/DEBIAN

	# authentication module for Sasl
	cd src/modules/authentication/sasl; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-sasl; \
		cd ../../../..
	mkdir /usr/src/packages/BUILD/debian/wolframe-sasl/DEBIAN
	cp debian/shlibs /usr/src/packages/BUILD/debian/wolframe-sasl/DEBIAN

	# copy local versions of shared libraries of boost for platforms missing a decent
	# version of boost
	# TODO: lib, lib64, lib32
	mkdir -p /usr/src/packages/BUILD/debian/wolframe/usr/lib/$(DEB_HOST_MULTIARCH)/wolframe
	for i in \
		libboost_program_options.so.$(BOOST_VERSION) libboost_system.so.$(BOOST_VERSION) \
		libboost_filesystem.so.$(BOOST_VERSION) libboost_thread.so.$(BOOST_VERSION) \
		libboost_date_time.so.$(BOOST_VERSION); do \
		cp /usr/lib/$$i /usr/src/packages/BUILD/debian/wolframe/usr/lib/$(DEB_HOST_MULTIARCH)/wolframe; \
	done

	# client package
	cd clients; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-client; \
		cd ..

	# documentation package
	cd docs; $(MAKE) install $(WOLFRAME_PARAMS) \
		DESTDIR=/usr/src/packages/BUILD/debian/wolframe-doc; \
		cd ..
	
	# --- end custom part for installing

# Build architecture-independent files here.
binary-indep: build install
	# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installdebconf
	dh_installdocs
	dh_installexamples
	dh_installmenu
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_installinit
#	dh_installcron
	dh_installman
#	dh_installinfo
#	dh_undocumented
	dh_installchangelogs
#	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
#	dh_perl
# TODO: this needs a lot of fixing, but the build process currently is weird..
	dh_shlibdeps \
		-L libwolframe \
		-l /usr/src/packages/BUILD/debian/wolframe/usr/lib/$(DEB_HOST_MULTIARCH)/wolframe \
		-- --ignore-missing-info -v
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
