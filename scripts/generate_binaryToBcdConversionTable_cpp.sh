#!/bin/sh
#************************************************************************
#
# Copyright (C) 2011 - 2014 Project Wolframe.
# All rights reserved.
#
# This file is part of Project Wolframe.
#
# Commercial Usage
#    Licensees holding valid Project Wolframe Commercial licenses may
#    use this file in accordance with the Project Wolframe
#    Commercial License Agreement provided with the Software or,
#    alternatively, in accordance with the terms contained
#    in a written agreement between the licensee and Project Wolframe.
#
# GNU General Public License Usage
#    Alternatively, you can redistribute this file and/or modify it
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Wolframe is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Wolframe.  If not, see <http://www.gnu.org/licenses/>.
#
# If you have questions regarding the use of this file, please contact
# Project Wolframe.
#
#************************************************************************/

echo "//****************************************************************"
echo "// This file has been generated by $0"
echo "// DO NOT EDIT THIS FILE !"
echo "//****************************************************************"

echo 'struct DecNumFactor'
echo '{'
echo '	enum {TabSize=50};'
echo '	unsigned int ofs;'
echo '	unsigned char tab[TabSize];'
echo '};'
echo 'enum {MaxHexDigits=40};'
echo 'static DecNumFactor g_hexnum_decnum_factor_table[MaxHexDigits] = {'
NUM=1
ZEROS=''
loopcnt=0
while [ $loopcnt -lt 50 ]
do
	ZEROS=0$ZEROS
	loopcnt=`expr $loopcnt + 1`
done
loopcnt=0
while [ $loopcnt -lt 40 ]
do
	loopcnt=`expr $loopcnt + 1`
	nof_digits=`echo "$NUM" | wc -c`
	nof_leading_zeros=`expr 50 - $nof_digits`
	ii=0
	NUMPREFIX=''
	while [ $ii -lt $nof_leading_zeros ]
	do
		NUMPREFIX="0$NUMPREFIX"
		ii=`expr $ii + 1`
	done
	TAB=`echo "$NUMPREFIX$NUM" | sed "s/\(.\)/\1,/g" | sed 's/,$/}/' | sed 's/^/{/'`
	OFFSET=$nof_leading_zeros
	echo "{$OFFSET,$TAB},"
	NUM=`echo "16 * $NUM" | bc`
done
echo '};';
echo
echo

