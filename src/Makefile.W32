TOPDIR = ..

SUBDIRS =

!INCLUDE $(TOPDIR)\makefiles\nmake\platform.mk

INCLUDE_DIRS = \
	/D_WIN32_WINNT=0x400 \
	/I. \
	/I$(TOPDIR)\include \
	/I"$(BOOST_DIR)" \
	/I"$(PLATFORM_SDK_DIR)\Include"

# Note: libraries are picked automatically on Windows!
SDK_LDFLAGS = /LIBPATH:"$(PLATFORM_SDK_DIR)\lib"
BOOST_LDFLAGS = /LIBPATH:"$(BOOST_DIR)\lib"
INCLUDE_LDFLAGS = \
	$(SDK_LDFLAGS) $(BOOST_LDFLAGS)
	
INCLUDE_LIBS = \
	Advapi32.lib

# openssl

!IFDEF WITH_SSL

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)	/I"$(OPENSSL_DIR)\include"

INCLUDE_CPPFLAGS = \
	$(INCLUDE_CPPFLAGS) /DWITH_SSL

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:"$(OPENSSL_DIR)\lib"

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) $(OPENSSL_LIBS)

!ENDIF

# boost-log

!IFNDEF WITH_BOOST_LOG

INCLUDE_CPPFLAGS = \
	$(INCLUDE_CPPFLAGS) /DFAKE_LOGGER
	
!ELSE

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:$(TOPDIR)\3rdparty\src\boost\log

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)	/I$(TOPDIR)\3rdparty\include

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log$(BOOST_LIBRARY_TAG).lib \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log_setup$(BOOST_LIBRARY_TAG).lib

!ENDIF

# lua

!IFDEF WITH_LUA

OBJS = \
	$(OBJS) luaHandler.obj luahelpers.obj

INCLUDE_CPPFLAGS = \
	$(INCLUDE_CPPFLAGS) /DWITH_LUA

INCLUDE_DIRS = \
	$(INCLUDE_DIRS) /I"$(LUA_DIR)\src"

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:"$(LUA_DIR)\src"

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) "$(LUA_DIR)\src\lua51.lib"

!ENDIF

CPP_BINS = \
	smerpd.exe

STATIC_LIBS = \

STATIC_LIB_OBJS = \

C_PORT_OBJS = \

OBJS = \
	$(C_PORT_OBJS) \
	$(STATIC_LIB_OBJS) \
	version.obj \
	appInstance.obj \
	commandLine.obj \
	logLevel.obj \
	logSyslogFacility.obj \
	logger.obj \
	configFile.obj \
	appConfig.obj \
	server.obj \
	acceptor.obj \
	connection.obj \
	getPassword.obj \
	echoHandler.obj \
	luaHandler.obj luahelpers.obj \
	winMain.obj

all: $(OBJS) $(CPP_BINS)

!INCLUDE $(TOPDIR)\makefiles\nmake\sub.mk

smerpd.exe: smerpd.obj $(OBJS) $(BOOST_LOG_LIBS)

local_all:

local_clean:

local_distclean:

local_test:
