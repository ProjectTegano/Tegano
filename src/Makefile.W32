TOPDIR = ..

SUBDIRS = libwolframe modules

!INCLUDE $(TOPDIR)\makefiles\nmake\platform.mk

INCLUDE_CXXFLAGS = \
	/D_WIN32_WINNT=0x504

INCLUDE_DIRS = \
	/I. \
	/I$(TOPDIR)\include \
	/I"$(BOOST_INCLUDE_DIR)"

INCLUDE_LDFLAGS = \
	$(BOOST_LDFLAGS)

INCLUDE_LIBS = \
	$(TOPDIR)\src\libwolframe\wolframe.lib \
	advapi32.lib

# openssl

!IFDEF WITH_SSL

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)	/I"$(OPENSSL_DIR)\include"

INCLUDE_CXXFLAGS = \
	$(INCLUDE_CXXFLAGS) /DWITH_SSL

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:"$(OPENSSL_DIR)\lib"

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) $(OPENSSL_LIBS)

!ENDIF

# Lua
!IFDEF WITH_LUA

INCLUDE_CXXFLAGS = \
	$(INCLUDE_CXXFLAGS) /DWITH_LUA
 
INCLUDE_DIRS = \
	$(INCLUDE_DIRS) /I$(TOPDIR)\lua\src

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) $(TOPDIR)\lua\src\lua.lib

!ENDIF

# MS XML
!IFDEF WITH_MSXML

INCLUDE_CXXFLAGS = \
	$(INCLUDE_CXXFLAGS) /DWITH_MSXML

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)

INCLUDE_LIBS = \
	$(INCLUDE_LIBS)
	
!ENDIF

# XmlLite
!IFDEF WITH_XMLLITE

INCLUDE_CXXFLAGS = \
	$(INCLUDE_CXXFLAGS) /DWITH_XMLLITE

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)

INCLUDE_LIBS = \
	$(INCLUDE_LIBS)
	
!ENDIF

LOCAL_STATIC_LIB = \
	wolframe.lib

LOCAL_STATIC_LIB_OBJS = \
	version.obj \
	commandLine.obj \
	serviceConfig.obj \
	serviceBanner.obj \
	appConfig.obj \
	config_descriptionBase.obj \
	protocol_ioblocks.obj \
	protocol_commandHandler.obj \
	protocol_lineCommandHandler.obj \
	langbind_appObjects.obj \
	langbind_ioFilterCommandHandler.obj \
	langbind_directmapCommandEnvironment.obj \
	langbind_directmapCommandHandler.obj \
	filter_textwolf_filter.obj \
	filter_textwolf_filterBase.obj \
	filter_char_filter.obj \
	filter_line_filter.obj \
	filter_token_filter.obj \
	serialize_struct_filtermapBase.obj \
	serialize_ddl_filtermapSerialize.obj \
	serialize_mapContext.obj \
	ddl_atomicType.obj \
	ddl_structType.obj \
	ddl_compilerInterface.obj \
	ddl_compiler_simpleFormCompiler.obj \
	acceptor.obj \
	getPassword.obj \
	connection.obj \
	serverConfig.obj \
	server.obj \
	procProvider.obj

!IFDEF WITH_SSL
LOCAL_STATIC_LIB_OBJS = \
	$(LOCAL_STATIC_LIB_OBJS) serverEndpoint.obj
!ENDIF

#Lua
!IFDEF WITH_LUA
LOCAL_STATIC_LIB_OBJS = \
	$(LOCAL_STATIC_LIB_OBJS) \
	serialize_struct_luamapBase.obj \
	langbind_luaDebug.obj \
	langbind_luaCommandEnvironment.obj \
	langbind_luaCommandHandler.obj
!ENDIF

# MS XML
!IFDEF WITH_MSXML
LOCAL_STATIC_LIB_OBJS = \
	$(LOCAL_STATIC_LIB_OBJS) \
	filter_msxml_filter.obj
!ENDIF

# XMLLite
!IFDEF WITH_XMLLITE
LOCAL_STATIC_LIB_OBJS = \
	$(LOCAL_STATIC_LIB_OBJS) \
	filter_xmllite_filter.obj
!ENDIF

#SSL
!IFDEF WITH_SSL
LOCAL_STATIC_LIB_OBJS = $(LOCAL_STATIC_LIB_OBJS) \
	SSLcertificateInfo.obj
!ENDIF

CPP_OBJS = \
	appProperties.obj \
	appConfigDefinition.obj \
	$(LOCAL_STATIC_LIB_OBJS) \
	loadModules.obj \
	wolframeHandler.obj \
	winMain.obj

CPP_BINS = \
	wolframed.exe
	
all: dependencies $(CPP_OBJS) $(CPP_BINS)

dependencies:
	cd libwolframe & $(MAKE) /nologo /f Makefile.w32 all

!INCLUDE $(TOPDIR)\makefiles\nmake\sub.mk

modules: libwolframe
wolframed.exe: wolframed.obj $(CPP_OBJS) libwolframe\logger\wolframemsg.res

$(LOCAL_STATIC_LIB): $(LOCAL_STATIC_LIB_OBJS)
	$(LINK) /lib /nologo /out:$@ $(STATIC_LDFLAGS) $(LIBS) $?

local_all: $(LOCAL_STATIC_LIB) loadModules-dummy.obj

local_clean:
	@-erase $(LOCAL_STATIC_LIB) 2>NUL
	@-erase $(CPP_OBJS) 2>NUL
	@-erase test.bat 2>NUL

local_distclean:

local_test:

copy_prereq:
!IFDEF WITH_SSL
	@-copy "$(OPENSSL_DIR)\bin\libeay32.dll" .
	@-copy "$(OPENSSL_DIR)\bin\ssleay32.dll" .
!ENDIF
!IFDEF WITH_PGSQL
	@-copy "$(PGSQL_DIR)\lib\libpq.dll" .
	@-copy "$(PGSQL_DIR)\bin\libintl*.dll" .
	@-copy "$(PGSQL_DIR)\bin\libiconv*.dll" .
!ENDIF

run: copy_prereq
	@-echo echo Running the Wolframe server... > test.bat
	@-echo wolframed.exe -c wolframe.xml >> test.bat
	@-test.bat

check: copy_prereq
	@-echo wolframed.exe -c wolframe.xml -t > test.bat
	@-test.bat

print: copy_prereq
	@-echo wolframed.exe -c wolframe.xml -p > test.bat
	@-test.bat
