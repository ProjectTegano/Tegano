TOPDIR = ..\..

SUBDIRS =

!INCLUDE $(TOPDIR)\makefiles\nmake\platform.mk

INCLUDE_CXXFLAGS = \
	/D_WIN32_WINNT=0x504

INCLUDE_DIRS = \
	/I. \
	/I$(TOPDIR)\src \
	/I$(TOPDIR)\include \
	/I"$(BOOST_INCLUDE_DIR)"

INCLUDE_LDFLAGS = \
	$(BOOST_LDFLAGS)

INCLUDE_LIBS = \
	$(TOPDIR)\src\libconfig\wfconfig.lib \
	$(TOPDIR)\src\libprovider\wfprovider.lib \
	$(TOPDIR)\src\libwolframe\wolframe.lib \
	$(TOPDIR)\src\libwolframe_serialize\wolframe_serialize.lib \
	$(TOPDIR)\src\libwolframe_database\wolframe_database.lib \
	$(TOPDIR)\src\libwolframe_langbind\wolframe_langbind.lib \
	$(TOPDIR)\src\libwfsingleton\wfsingleton.lib \
	advapi32.lib \

# openssl
!IFDEF WITH_SSL

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)	/I"$(OPENSSL_DIR)\include"

INCLUDE_CXXFLAGS = \
	$(INCLUDE_CXXFLAGS) /DWITH_SSL

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:"$(OPENSSL_DIR)\lib"

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) $(OPENSSL_LIBS)

!ENDIF

CPP_OBJS = \
	acceptor.obj \
	connection.obj \
	mainConnectionHandler.obj \
	serverConnectionHandler.obj \
	server.obj \
	serverEndpoint.obj \
	serverHandler.obj \
	winMain.obj \
	wolframedCommandLine.obj

!IFDEF WITH_SSL
CPP_OBJS = \
	$(CPP_OBJS) SSLcertificateInfo.obj
!ENDIF

CPP_BINS = \
	wolframed.exe

all: dependencies $(CPP_OBJS) $(CPP_BINS)

dependencies:
	@cd $(TOPDIR)\src\libwolframe & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libwfsingleton & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libwolframe_serialize & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libwolframe_database & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libwolframe_langbind & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libconfig & $(MAKE) /nologo /f Makefile.w32 all
	@cd $(TOPDIR)\src\libprovider & $(MAKE) /nologo /f Makefile.w32 all

!INCLUDE $(TOPDIR)\makefiles\nmake\sub.mk

modules: libwolframe
wolframed.exe: wolframed.obj $(CPP_OBJS) $(TOPDIR)\src\libwfsingleton\logger\wolframemsg.res

local_all:

local_clean:
	@-erase wolframed.exe 2>NUL
	@-erase $(CPP_OBJS) 2>NUL

local_distclean:

local_test:

copy_prereq:
	@-copy $(TOPDIR)\src\libwfsingleton\wfsingleton.dll . >NUL
!IFDEF WITH_SSL
	@-copy "$(OPENSSL_DIR)\bin\libeay32.dll" . >NUL
	@-copy "$(OPENSSL_DIR)\bin\ssleay32.dll" . >NUL
!ENDIF
!IFDEF WITH_LUA
	@-copy $(TOPDIR)\3rdParty\lua\src\lua52.dll . >NUL
!ENDIF
!IFDEF WITH_PGSQL
	@-copy "$(PGSQL_DIR)\lib\libpq.dll" . >NUL
!IFDEF PGDLL_WITH_I18N
	@-copy "$(PGSQL_DIR)\bin\libintl*.dll" . >NUL
	@-copy "$(PGSQL_DIR)\bin\libiconv*.dll" . >NUL
!ENDIF
!ENDIF
!IFDEF WITH_LIBXML2
	@-copy "$(ZLIB_DIR)\bin\zlib1.dll" . >NUL
	@-copy "$(ICONV_DIR)\bin\iconv.dll" . >NUL
	@-copy "$(LIBXML2_DIR)\bin\libxml2.dll" . >NUL
!ENDIF
!IFDEF WITH_LIBXSLT
	@-copy "$(LIBXSLT_DIR)\bin\libxslt.dll" . >NUL
!ENDIF
!IFDEF WITH_ICU
	@-copy "$(ICU_DIR)\bin\icudt$(ICU_LIB_VERSION).dll" . >NUL
!IFNDEF DEBUG
	@-copy "$(ICU_DIR)\bin\icuin$(ICU_LIB_VERSION).dll" . >NUL
	@-copy "$(ICU_DIR)\bin\icuuc$(ICU_LIB_VERSION).dll" . >NUL
!ELSE
	@-copy "$(ICU_DIR)\bin\icuin$(ICU_LIB_VERSION)d.dll" . >NUL
	@-copy "$(ICU_DIR)\bin\icuuc$(ICU_LIB_VERSION)d.dll" . >NUL
!ENDIF
!ENDIF

run: copy_prereq
	@-echo Running the Wolframe server...
	@-wolframed.exe -c ..\wolframe.xml

check: copy_prereq
	@-wolframed.exe -c ..\wolframe.xml -t

print: copy_prereq
	@-wolframed.exe -c ..\wolframe.xml -p

