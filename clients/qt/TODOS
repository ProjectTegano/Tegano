now:
- stop the "whiteout", especially seen after assigning pictures
  (must be a protocol thing), happens mainly on Windows 7/8, not
  on Linux/Windows XPL:
  on FreeBSD: REQUEST, still in Data state, so the protocol misses
  the end somehow, the last m_answer contains a category tree (so
  it's a domain read), the tree stops in the middle: <tree><item id="45">,
  requests get stuffed into the queue, nothing gets ever executed,
  second time with printqstring m_answer (QString)0x7bae258 (length=0): ""
  - can be provoked by using non-debug XML sending and textwolf XML filter
    on Windows XP, so it is a failed signal for a partial line, must add
    a state like DataLeft (Data gets DataReading or so)
- ILLEGAL STATE 4 in dataAvailable!
- MDI interface
  - open forms via click on button
  - close forms on click on button
  - reload forms from other forms
  - some wiring trouble in datahandler:
    CRITICAL: ERROR: answer for unknown request of doctype "xxx": most likely the
    formwidgets share the same datahandler and the signals are missed, its list and hierarchy
    requests, so it's the domain filler.
    It happens only if the same form is picked as already shown in another window
    => not implementable without tagging in the protocol! map of doctype in protocol back
    is not possible, we must be able to encode window id, widget id and map it to a tag in
    the protocol

musts:
- open info box (modal) in feature/category/component edit and add to
  show picture information
- search with flag (with children)
- delete needs manual set parameters, update and add use XML from widgets,
  slightly assymetrical maybe?
- tags picked from a list and added (needs events)
- linking of categories and features
- rewrite categories, so that joins to pictures, requires/provides, tags,
  etc. are possible trhough the lua layer
- optimal size on qtreewidget to fit items (needed for linking categories
  and features linking view)
- tabbed preferences dialog, like thunderbird (in security, form management,
  etc.)
- show pictures in tree view
- show titles of forms somewhere in the qtclient
- scroll to selected element in a single-selection list
- push button state (disabled/enabled) based on a
  condition like {picture.id>0}
- get sensible error message from business layer, not "lua call failed"
  - e.g. avoid deletion of in-use-pictures
  - better even: provide conditions for buttons, so they can't be
    pressed (button.state={something})
- improve group_concat to take a parameter as separator
- use simpleforms instead of funny lua parsers (example
  picture parsers)
- allow grouping into tags without a dummy groupbox or
  similar widget around it, where to put the data then?
- how to comminicate tags which are used by picture and 
  they should not be deletable?
- QTableWidget
  - implement other selection modes (column, cells)
  - remember states like column width, etc.
- QDialog instead of QWidget for forms
  - would allow to have default Enter and ESC behaviour
  - must be treated specially, as the form should NOT
    replace the UI currently being shown
- save global state to settings and read it from there
  - global.XXX variables
  - last form
- unselect trees
- element operations
  - reorganize tree
    - move elements/subtrees
- protocol
  - network loader via protocol or use client library?
- designer custom widgets
  - them in MainWindow:
    - the now case is FormWidget<init>
    - MDI or tabbed view
  - picture viewer
    - show 0 to N pictures, scrollable
    - alternative to QTableWidget approach
- localize forms:
  - Windows doesn't retranslate on the fly! Why?
  - Windows doesn't respect language on startup for form
- localize data:
  - lists and trees need id and translations.
  - where to store the translations? server side, same as domains,
    maybe language attributes for now and separated translations later?
  - classes to map from/to:
    - QListWidget
      - localization
      - form init doesn't work when language is not en_US
    - QTreeWidget
      - localization
      - keep state of
        - sorting order of columns
        - header width
      - expandAll on load
      - open and make an item visible (for instance the location of the
        last add)
- for completion and presentation of big data
  - QListView: with model for big data, on request
  - QTreeView: with model for big data, on request
- file download, later, for reports, PDFs, etc.
  - PDF widget poppler qt4 for previews

nice to do:
- FormWidget:
  - provide a preview of the form?
- work more on Android port
- use QNetworkSession (for mobiles and roaming profiles)
- designer mode
  - call designer, linguist, lupdate and lrelease as external processes
  - have a spooler to delegate editing of ui, ts, qss, data to external processes
    - multiple repositores, move objects between them
    - sqlite storage
    - configuration dialog
    - http://www.vision.ee.ethz.ch/computing/sepp-irix/qt-3.0-mo/designer-manual-6.html
- add a data handler
- completion
  - combobox with linedit combined search
  - lists? trees?
- validators
  - add dynamic property for a series of validators like
    - mandatory/optional
    - integer range
    - regex
- tooltips
- how to handle domain enums with internal and presentation
  (e.g. combobox, selection)
- representation of lists of variable size, e.g. list of
  phone numbers
- states (enable/disabled, read/write or read/only) can depend
  on states of other widgets, best example is a checked group
  box for a bunch of settings, see preferences dialog)
- add authentication dialog
- action/form switchForm:
  - need a small state machine for handling the sequence [{action}] <form>
    correctly with error handling
  - as with state machines we would have a "go back wherever you came from"
- most likely not the idea
  - 1:n relations (pick a foreign reference to another
    object), domains (e.g. pick a city in a list of possibilities)
  - grid views
