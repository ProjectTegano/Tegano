diff --git a/boost/unordered/detail/buckets.hpp b/boost/unordered/detail/buckets.hpp
index 7492220..0edd76f 100644
--- a/boost/unordered/detail/buckets.hpp
+++ b/boost/unordered/detail/buckets.hpp
@@ -510,7 +510,16 @@ namespace boost { namespace unordered { namespace detail {
             {
                 for(;;) {
                     n = static_cast<node_pointer>(n->next_);
-                    if (n == end) return;
+                    if (n == end) {
+                        if (n) {
+                            std::size_t new_bucket_index =
+                                n->hash_ % this->bucket_count_;
+                            if (bucket_index != new_bucket_index) {
+                                this->get_bucket(new_bucket_index)->next_ = prev;
+                            }
+                        }
+                        return;
+                    }
     
                     std::size_t new_bucket_index =
                         n->hash_ % this->bucket_count_;
diff --git a/boost/unordered/detail/equivalent.hpp b/boost/unordered/detail/equivalent.hpp
index 6e7e419..1c0def7 100644
--- a/boost/unordered/detail/equivalent.hpp
+++ b/boost/unordered/detail/equivalent.hpp
@@ -323,7 +323,7 @@ namespace boost { namespace unordered { namespace detail {
             }
 
             node_pointer start = n1;
-            for(;n1 != end2; n1 = static_cast<node_pointer>(n1->next_))
+            for(;n1 != end1; n1 = static_cast<node_pointer>(n1->next_))
             {
                 value_type const& v = n1->value();
                 if (find(start, n1, v)) continue;
@@ -651,9 +651,9 @@ namespace boost { namespace unordered { namespace detail {
 
                     if(begin == group2) {
                         link_pointer end1 = group1->group_prev_;
-                        link_pointer end2 = group2->group_prev_;
+                        link_pointer end2 = end->group_prev_;
                         group1->group_prev_ = end2;
-                        group2->group_prev_ = end1;
+                        end->group_prev_ = end1;
                     }
                 }
             }
@@ -780,7 +780,7 @@ namespace boost { namespace unordered { namespace detail {
         // strong otherwise exception safety
         void rehash_impl(std::size_t num_buckets)
         {
-            BOOST_ASSERT(this->size_);
+            BOOST_ASSERT(this->buckets_);
 
             buckets dst(this->node_alloc(), num_buckets);
             dst.create_buckets();
diff --git a/boost/unordered/detail/unique.hpp b/boost/unordered/detail/unique.hpp
index 9c049f7..d58e5bd 100644
--- a/boost/unordered/detail/unique.hpp
+++ b/boost/unordered/detail/unique.hpp
@@ -661,7 +661,7 @@ namespace boost { namespace unordered { namespace detail {
         // strong otherwise exception safety
         void rehash_impl(std::size_t num_buckets)
         {
-            BOOST_ASSERT(this->size_);
+            BOOST_ASSERT(this->buckets_);
 
             buckets dst(this->node_alloc(), num_buckets);
             dst.create_buckets();
