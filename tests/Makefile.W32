TOPDIR = ..

SUBDIRS =

!INCLUDE $(TOPDIR)\makefiles\nmake\platform.mk

INCLUDE_DIRS = \
	/I$(TOPDIR)/include /I. \
	/I$(TOPDIR)/src \
	/I"$(BOOST_DIR)" \
	/I"$(PLATFORM_SDK_DIR)\Include"

# Note: libraries are picked automatically on Windows!
SDK_LDFLAGS = /LIBPATH:"$(PLATFORM_SDK_DIR)\lib"
BOOST_LDFLAGS = /LIBPATH:"$(BOOST_DIR)\lib"
INCLUDE_LDFLAGS = \
	$(SDK_LDFLAGS) $(BOOST_LDFLAGS)

# boost-log

!IFNDEF WITH_BOOST_LOG

INCLUDE_CPPFLAGS = \
	$(INCLUDE_CPPFLAGS) /DFAKE_LOGGER
	
!ELSE

INCLUDE_LDFLAGS = \
	$(INCLUDE_LDFLAGS) /LIBPATH:$(TOPDIR)\3rdparty\src\boost\log

INCLUDE_DIRS = \
	$(INCLUDE_DIRS)	/I$(TOPDIR)\3rdparty\include

INCLUDE_LIBS = \
	$(INCLUDE_LIBS) \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log$(BOOST_LIBRARY_TAG).lib \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log_setup$(BOOST_LIBRARY_TAG).lib

!ENDIF

TEST_CPP_BINS = \
	singletonTest.exe \
	versionTest.exe

!IFDEF WITH_BOOST_LOG
TEST_CPP_BINS = $(TEST_CPP_BINS) logTest.exe
!ENDIF

OBJS = \
	$(TOPDIR)\src\version.obj

all: $(OBJS) $(CPP_BINS)

!INCLUDE $(TOPDIR)\makefiles\nmake\sub.mk

singletonTest.exe: singletonTest.obj
versionTest.exe: versionTest.obj
logTest.exe: logTest.obj \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log$(BOOST_LIBRARY_TAG).lib \
	$(TOPDIR)\3rdparty\src\boost\log\libboost_log_setup$(BOOST_LIBRARY_TAG).lib

local_all:

local_clean:
	@-erase test.bat 2>NUL

local_distclean:

local_test:
	@-echo @echo off > test.bat
	@-echo PATH=%PATH%;$(BOOST_DIR)\Lib >> test.bat
	@-echo echo Testing singleton template... >> test.bat
	@-echo singletonTest >> test.bat
	@-echo echo Testing version... >> test.bat
	@-echo versionTest >> test.bat
!IFDEF WITH_BOOST_LOG
	@-echo echo Testing boost log... >> test.bat
	@-echo logTest >> test.bat
!ENDIF
	@-test.bat
