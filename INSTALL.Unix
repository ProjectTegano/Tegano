Build Instructions for Unixes
=============================

Table of Contents
-----------------

  Prerequisites
  Configuration of the build
  Manually build the prerequisites
    Compile and install boost
    Compile and install openssl
    Compile and install Qt
  Build instructions for specific Linux Distributions
    RHEL/Centos/SL 5
    RHEL/Centos/SL 6
    Fedora 16
    Fedora 17
    Ubuntu 10.04.1 LTS
    Ubuntu 11.04
    Ubuntu 11.10
    Ubuntu 12.04 LTS
    Ubuntu 12.10
    Debian 6.0
    OpenSuSE 11.4
    OpenSuSE 12.1
    OpenSuSE 12.2
    SLES 11 SP1/SP2
    Slackware 13.37
    Archlinux
  Instructions for other Unixes
    FreeBSD 8.2
    FreeBSD 9.0
    Solaris 10
      Solaris 10 (CSW toolchain)

Prerequisites
-------------

- gcc c++ 4.1.x or later (preferably 512 MB RAM or Swap)
- GNU make (preferably 3.82 or newer)
- boost 1.48.0 or later
- optionally (WITH_SSL) openssl 0.9.7 or later
- optionally (WITH_LUA) lua 5.2
  (integrated in subdir 'lua')
- for the optional Qt client
  - optionally (WITH_QT) Qt 4, 4.6.x or later
- for database support (WITH_SYSTEM_SQLITE3): sqlite3
  WITH_LOCAL_SQLITE3=1 uses the supplied amalgamation
  instead of the system version
  - optionally (WITH_PGSQL)
- for optional authentication mechanisms:
  - optionally (WITH_PAM)
  - optionally (WITH_SASL)
- optionally for testing:
  - optionally (WITH_EXPECT) expect and Tcl 8.4 or later
- optionally (for building the documentation):
  - xsltproc, docboox-xsl-stylesheet: for docbook
  - fop: to produce a nice PDF documentation
  - doxygen: for documentation for programmers
  - dia: to convert images to svg
- optionally (WITH_LIBXML2)
- optionally (WITH_LIBXSLT), needs LIBXML2 too
- optionally (WITH_SYSTEM_LIBHPDF): for PDF creation
  using the system version of libhpdf, specify
  WITH_LOCAL_LIBHPDF=1 to use the supplied version in
  the 'libhpdf' subdirectory. In this case also 
  'zlib' and 'libpng' development libraries are needed
- optionally (WITH_ICU): ICU 3.6 or later,
  needed for boost-locale with ICU backend
- optionally (WITH_SYSTEM_FREEIMAGE): for image handling
  using the system version of FreeImage, specify
  WITH_LOCAL_FREEIMAGE=1 to use the supplied version in
  the 'freeimage' subdirectory.

Configuration of the build
--------------------------

First the build system tries to determine automatically
the paths of the software.

Use 'make help' to find out which options exist (e.g. WITH_SSL).

Use 'make <config options> config' to see what variables
the system would use to build Wolframe.

If you get 'NOT SUPPLIED ON THIS PLATFORM' for some variables
you have either to port the system in 'makefiles/gmake/platform.mk'
or you can build and configure your own version of the package.

In this case copy 'makefiles/gmake/config.mk.template' to your
home directory as '~/config.mk'. Customize '~/config.mk' as needed.

Alternatively you can of course pass all the options as variables 
directory to the invocation of make.

Versions of packages just indicate the ones I tested last, this
doesn't mean other versions won't work.

Manually build the prerequisites
--------------------------------

Compile and install boost
-------------------------

./bootstrap.sh --prefix=/usr/local/boost-1.xx.y \
	--with-libraries=thread,filesystem,system,program_options,date_time
./bjam install

For boost-locale and ICU support you have to specify 'regex' and the 'locale'
libraries too:

./bootstrap.sh --prefix=/usr/local/boost-1.xx.y \
	--with-libraries=thread,filesystem,system,program_options,date_time,regex,locale
./bjam install

configure Wolframe in ~/config.mk and
set BOOST_DIR to /usr/local/boost-1.xx.y.

Compile and install openssl
---------------------------

Unless you have a good reason, use the openssl library of
your Linux distribution.

Compile and install Qt
----------------------

./configure --prefix /usr/local/qt-4.x.y -openssl
make
cd src/3rdparty/webkit/JavaScriptCore/
make
cd -
make install

confiugre Wolframe in ~/config.mk and
set QT_DIR to /usr/local/qt-4.x.y

Build instructions for specific Linux Distributions
---------------------------------------------------

RHEL/Centos/SL 5
----------------

Optional packages:
Fetch from normal repository: openssl-devel, pam-devel (0.99.6), cyrus-sasl-devel (2.1.22),
                              sqlite-devel (3.3.6), postgresql84-devel (8.4.13),
                              libxslt-devel (1.1.17), zlib-devel (1.2.3-4), libpng-devel (1.2.10-16),
                              libicu-devel (3.6-5.16.1)

Libxml2 is too old (2.6.26), build your own 2.7.8 one.

Boost is not available in a decent version (1.33), build your own one.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

Qt (4.2.1) is too old, compile your own one.

For building the documentation you need 'libxslt', 'doxygen' and
'docbook-style-xsl' (from epel).

RHEL/Centos/SL 6
----------------

Optional packages:

Fetch from normal repository: openssl-devel, pam-devel (0.99.6), cyrus-sasl-devel (2.1.22),
                              sqlite-devel (3.3.6), postgresql-devel (8.1.23),
                              libxml2-devel (2.7.6), libxslt-devel (1.1.26),
                              zlib-devel (1.2.3-27), libpng-devel (1.2.48-1),
                              libicu-devel (4.2.1)

Boost is available in an almost usable version (1.39.0), build your own one.

If you need boost-locale with ICU support you have to compile your own boost library.

On RHEL6 there is no licicu-devel on OSC currently (see
http://permalink.gmane.org/gmane.linux.suse.opensuse.buildservice/17779).
Build your own libicu library and build your own boost library with boost-locale.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

Qt (4.2.1) is too old, compile your own one.

For building the documentation you need 'libxslt', 'doxygen' and
'docbook-style-xsl' (from epel).

Fedora 16
---------

No problems with the supplied packages at all, everything builds out of the box:

Required pacakges: boost-devel (1.47.0)
Optional packages: openssl-devel (1.0.0g), qt4-devel (4.8.0),
                   pam-devel (1.1.5), cyrus-sasl-devel (2.1.23),
                   sqlite-devel (3.7.7), postgresql-devel (9.1.3),
                   libxml2-devel (2.7.8), libxslt-devel (1.1.26),
                   libpng-devel (1.2.48), zlib-devel (1.2.5),
                   libicu-devel (4.6)                   

If you need boost-locale with ICU support you have to compile your own boost library.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

Fedora 17
---------

No problems with the supplied packages at all, everything builds out of the box:

Required pacakges: boost-devel (1.48.0)
Optional packages: openssl-devel (1.0.0j), qt4-devel (4.8.2),
                   pam-devel (1.1.5), cyrus-sasl-devel (2.1.23),
                   sqlite-devel (3.7.11), postgresql-devel (9.1.5),
                   libxml2-devel (2.7.8), libxslt-devel (1.1.26),
                   libpng-devel (1.2.48), zlib-devel (1.2.5)

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect' (5.45).

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

Ubuntu 10.04.1 LTS
------------------

Optional packages: libqt4-dev (4.6.2),
                   libpam-dev (1.1.1), libsasl2-dev (2.1.23),
                   libsqlite3-dev (3.6.22), libpq-dev (8.4.7),
                   libxml2-dev (2.7.6), libpng-dev (1.2.42),
                   zlib1g-dev (1.2.3.3.dfsg-15ubuntu1)

libboost-dev is 1.40, too old, missing asio features and property_tree, build
you own boost. gcc on Debian complains a lot about boost header files..

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Ubuntu 11.04
------------

Optional packages: libssl-dev (0.9.8o), libqt4-dev (4.7.2),
                   libpam-dev (1.1.2), libsasl2-dev (2.1.23),
                   libsqlite3-dev (3.7.4), libpq-dev (8.4.8),
                   libxml2-dev (2.7.8), libxslt1-dev (1.1.26)

libboost-dev is 1.42, only missing some new filesystem stuff, but you'll have to
compile your own one.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Ubuntu 11.10
------------

Required packages: libboost-dev (1.48), libboost-program-options-dev,
                   libboost-filesystem-dev, libboost-thread-dev,
                   libboost-random-dev, libboost-locale-dev

Optional packages: libssl-dev (1.0.0e), libqt4-dev (4.7.4),
                   libpam0g-dev (1.1.3), libsasl2-dev (2.1.24),
                   libsqlite3-dev (3.7.7), libpq-dev (9.1.3),
                   libxml2-dev (2.7.8), libxslt1-dev (1.1.26)
                   libpng-dev (1.2.46)

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Ubuntu 12.04
------------

Required packages: libboost-dev (1.48), libboost-program-options-dev,
                   libboost-filesystem-dev, libboost-thread-dev,
                   libboost-random-dev, libboost-locale-dev

Optional packages: libssl-dev (1.0.1), libqt4-dev (4.8.1),
                   libpam0g-dev (1.1.3), libsasl2-dev (2.1.25),
                   libsqlite3-dev (3.7.9), libpq-dev (9.1.3),
                   libxml2-dev (2.7.8), libxslt1-dev (1.1.26)
                   libpng-dev (1.2.46)

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Ubuntu 12.10
------------

Required packages: libboost-dev (1.49), libboost-program-options-dev,
                   libboost-filesystem-dev, libboost-thread-dev,
                   libboost-random-dev,  libboost-locale-dev

Optional packages: libssl-dev (1.0.1c), libqt4-dev (4.8.3),
                   libpam0g-dev (1.1.3), libsasl2-dev (2.1.25),
                   libsqlite3-dev (3.7.13), libpq-dev (9.1.6),
                   libxml2-dev (2.8.0), libxslt1-dev (1.1.26)
                   libpng12-dev (1.2.49), libfreeimage-dev (3.15.1)

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

Use WITH_SYSTEM_FREEIMAGE=1 for FreeImage support.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Debian 6.0
----------

Optional packages: libqt4-dev (4.6.3), libpam-dev (1.1.1),
                   libsasl2-dev (2.1.23), libsqlite3-dev (3.7.3),
                   libpq-dev (8.4.7), libxml2-dev (2.7.8),
                   libxslt1-dev (1.1.26), libpng12-dev (1.2.44),
                   zlib1g-dev (1.2.3.4)

libboost-dev is 1.42, slightly too old. Compile your own version.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For running the Postgresql database tests you need 'postgresql-client'.

For running the Sqlite3 database tests you need 'sqlite3'.

For running some tests you need 'telnet' (0.17).

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

OpenSuSE 11.4
-------------

Optional packages: qt-devel (4.7.1), pam-devel (1.1.3), cyrus-sasl-devel (2.1.23),
                   sqlite3-devel (3.7.5), postgresql-devel (9.0.3), libxml2-devel (2.7.8),
                   libxslt-devel (1.1.26), zlib-devel (1.2.5), libpng14-devel (1.4.4),
                   lilicu-devel (4.4.2)

Boost 1.44 is too old, compile your own.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

OpenSuSE 12.1
-------------

Optional packages: qt-devel (4.7.4), pam-devel (1.1.4), cyrus-sasl-devel (2.1.23),
                   sqlite3-devel (3.7.8), postgresql-devel (9.1.1), libxml2-devel (2.7.8),
                   libxslt-devel (1.1.26), zlib-devel (1.2.5), libpng14-devel (1.4.8),
                   lilicu-devel (4.6.1)

Boost 1.44 is too old, compile your own.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

OpenSuSE 12.2
-------------

Required packages: boost-devel (1.49.0)
Optional packages: qt-devel (4.8.1), pam-devel (1.1.5), cyrus-sasl-devel (2.1.25),
                   sqlite3-devel (3.7.12.1), postgresql-devel (9.1.1), libxml2-devel (2.7.8),
                   libxslt-devel (1.1.26), zlib-devel (1.2.7), libpng14-devel (1.4.11)

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

SLES 11 SP1
-----------

Optional packages: libqt4-devel (4.6.2), pam-devel (1.0.4), cyrus-sasl-devel (2.1.22),
                   sqlite3-devel (3.6.4), postgresql-devel (8.3.9), libxml2-devel (2.7.6),
                   libxslt (1.1.24)

boost is 1.36, compile your own one.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

SLES 11 SP2
-----------

see SLES 11 SP1. Package versions are different.

TODO: add proper docu here.

Slackware 13.37
---------------

We have boost 1.45.0, recent enough. 

openssl and qt are there (select the correct "disk" sets while installing)

PAM doesn't exist on Slackware it may be build manually.
Postgresql doesn't exist on Slackware, build your own one:

./configure --prefix=/home/<myname>/postgresql-9.1.3
make
make install

add PGSQL_DIR=/home/<myname>/postgresql-9.1.2 to Wolframe 'make'

Archlinux
---------

Required packages: boost and boost-libs
Optional packages: openssl, qt, pam, libsasl,
                   sqlite, postgresql-libs,
                   libxml2, libxslt, libharu,
                   icu, freeimage

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.
'fop' (together with 'java-batik', 'java-commons-io', 'java-avalon-framework',
'java-commons-logging', 'java-xmlgraphics-commons')

FreeImage only contains the static version of libfreeimageplus. If you
want the shared version, build with WITH_LOCAL_FREEIMAGE=1 instead.

Change /etc/fop.conf and make sure it contains the line:
CLASSPATH="$CLASSPATH:/usr/share/java/batik/xml-apis-ext.jar"

When rebuilding the SVG images of the documentation you also need 'dia'.

Instructions for other Unixes
-----------------------------

FreeBSD 8.2
-----------

Required packages: boost-libs (1.45.0)
Optional packages: qt4-gui (4.7.1), cyrus-sasl (2.1.23)
                   sqlite3 (3.7.4), postgresql (9.0.3), libxml2 (2.7.8),
                   png (1.4.8)

You need 'gmake' (3.81_4).

So far no PAM support.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

FreeBSD 9.0
-----------

Required packages: boost-libs (1.45.0)
Optional packages: qt4-gui (4.7.4), qt4-moc (4.7.4), qt4-network (4.7.4),
                   qt4-designer (4.7.4), cyrus-sasl (2.1.25_1),
                   sqlite3 (3.7.9), postgresql (9.1.2), libxml2 (2.7.8_1),
                   libxslt (1.1.26_3), png (1.4.8), zlib (1.1.0),
                   icu (4.8.1.1)

If you need boost with ICU support, compile your own boost from the
ports tree. Change the 'Makefile' and add 'locale' to 'BOOST_LIBS'.
See 'contrib/FreeBSD' for patches and the ports files.

Use the local version of FreeImage, as libfreeimageplus is not build
in the ports.

You need 'gmake' (3.82).

So far no PAM support.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.


Solaris 10
----------

Solaris 10 (CSW toolchain)
--------------------------

You may have to install a SFWgtar or CSWgtar in order to unpack the
sources. Make sure to rename them to 'gtar' to avoid collisions with
the standard SUN 'tar'!

http://www.opencsw.org

pkgadd -d http://get.opencsw.org/now

pkgutil --install CSWgcc4core CSWgcc4g++ CSWgmake

Make sure the build environment is always set as follows:

PATH=/opt/csw/bin:/usr/ccs/bin:/usr/bin:/bin:/opt/csw/sbin:/usr/sbin:/sbin
export PATH

Boost is too old (CSWboostdevel is 1.33) or it has no ICU locale
support (CSWboost-gcc-dev, 1.49).
It has to be compiled from scratch, use the version 1.48.0.

Do not use boost 1.49.0, it has a missing function fchmodat, see
http://lists.boost.org/boost-build/2012/02/25680.php
causing building of libboost_filesystem to fail!

Boost 1.50.0 and 1.51.0 have never been tested with Wolframe, so don't
use those!

SUNWicud/SUNWicu and CSW libicu_dev are both linked for the Forte C++
compiler. It's better, to compile your own version compiled with the
gcc compiler from CSW:

gtar zxf icu4c-49_1_2-src.tgz
# apply the icu_source_configure patch (for V9 CPU and some standard header files)
cd source/icu
./runConfigureICU Solaris/GCC --prefix=/opt/csw/icu4c-49.1.2
gmake
gmake install

First apply the following patch to 'boost/cstdint.ppp' for boost
(https://svn.boost.org/trac/boost/ticket/6158, see also
'contrib/Solaris/' for patch files):

...
namespace boost
{

#if defined(sun) || defined(__sun) 
  typedef signed char int8_t;
#else
  using ::int8_t;             
#endif  
..

Patch the correct architecture (V8 is not really supported, but V8
is also very old) in 'tools/build/v2/user-config.jam':

using gcc : 4.6.3 : g++ : <compileflags>-mcpu=v9 ; 

Apply all compilation patches from 'contrib/Solaris/' now.

Build and install normally:

./bootstrap.sh --prefix=/opt/csw/boost-1.48.0 \
	--with-libraries=thread,filesystem,system,program_options,date_time,regex,locale \
	--with-icu=/opt/csw/icu4c-49.1.2

./b2 -a -sICU_PATH=/opt/csw/icu4c-49.1.2 -d2 install

Optional packages to install from CSW for Wolframe:
  libssl_dev (0.9.8t)
  CSWpostgresql (8.3.1)
  CSWexpect (5.41.1)
  CSWsasl-dev and CSWsasl (2.1.25)
  CSWlibxml2-dev (2-2.7.8)
  CSWlibxslt-dev (1.1.26)
  CSWlibz-dev (1.2.5)

SUNWlxml is too old, use CSWlibxml2.
SUNWlxsl is too old, use CSWlibxslt.
SUNWzlib is missing 64-bit support, use CSWlibz instead!

CSWsqlite3 misses the header files, so use internally supplied version with WITH_LOCAL_SQLITE1=1

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

PAM is available natively, just add WITH_PAM=1

Build Wolframe:

LD_RUN_PATH=/opt/csw/lib:/opt/csw/postgresql/lib \
OPENSSL_DIR=/opt/csw PGSQL_DIR=/opt/csw/postgresql \
	LIBLT_DIR=/usr BOOST_DIR=/opt/csw/boost-1.48.0 \
	WITH_EXPECT=1 WITH_SSL=1 WITH_SQLITE3=1 WITH_PGSQL=1 WITH_LUA=1 WITH_LIBXML2=1 \
	WITH_LIBXSLT=1 WITH_LOCAL_SQLITE3=1 WITH_LOCAL_SQLITE1=1 \
	WITH_PAM=1 WITH_SASL=1 WITH_LOCAL_LIBHPDF=1 \
	WITH_ICU=1 ICU_DIR=/opt/csw/icu4c-49.1.2
	gmake \
		CC=gcc CXX=g++ CFLAGS=-mcpu=v9 CXXFLAGS=-mcpu=v9
