TOPDIR = ..

SUBDIRS =

!INCLUDE $(TOPDIR)\makefiles\nmake\platform.mk

INCLUDE_CXXFLAGS = \
	/D_WIN32_WINNT=0x500

INCLUDE_DIRS = \
	/I. \
	/I"$(PLATFORM_SDK_DIR)\Include"

# Note: libraries are picked automatically on Windows!
INCLUDE_LDFLAGS = \
	$(SDK_LDFLAGS)

INCLUDE_LIBS = \
	Ole32.lib

CPP_BINS =

!INCLUDE $(TOPDIR)\makefiles\nmake\sub.mk

# @office
WIX_DIR = C:\Program Files (x86)\Windows Installer XML v3.5
# @home PIII
WIX_DIR = C:\Program Files\Windows Installer XML v3.5

!IF ( "$(CPU)" == "" )
!IF ( "$(PROCESSOR_ARCHITECTURE)" == "x86" )
CPU=i386
!ELSE
!IF ( "$(PROCESSOR_ARCHITECTURE)" == "amd64" )
CPU=AMD64
!ELSE
!IF PROCESSOR_ARCHITEW6432 == amd64
CPU=AMD64
!ELSE
!ERROR Unknown CPU architecture found in PROCESSOR_ARCHITECTURE variable: $(PROCESSOR_ARCHITECTURE)
!ENDIF PROCESSOR_ARCHITEW6432 == amd64
!ENDIF PROCESSOR_ARCHITECTURE == amd64
!ENDIF PROCESSOR_ARCHITECTURE == x86
!ENDIF CPU == ""

!IF ( "$(CPU)" == "i386" )
#VDREDIST_MERGE_MODULE = C:\Program Files (x86)\Common Files\Merge Modules\Microsoft_VC90_CRT_x86.msm
VDREDIST_MERGE_MODULE = C:\Program Files\Common Files\Merge Modules\Microsoft_VC90_CRT_x86.msm
!ELSE
!IF ( "$(CPU)" == "AMD64" )
VDREDIST_MERGE_MODULE = C:\Program Files (x86)\Common Files\Merge Modules\Microsoft_VC90_CRT_x86.msm
#VDREDIST_MERGE_MODULE = C:\Program Files\Common Files\Merge Modules\Microsoft_VC90_CRT_x64.msm
!ELSE
!ERROR Unknown CPU architecture found in CPU variable: $(CPU)
!ENDIF CPU == AMD64
!ENDIF CPU == i386

!IF ( "$(CPU)" == "i386" )
WIX_ARCH = x86
!ENDIF CPU == i386

!IF ( "$(CPU)" == "AMD64" )
WIX_ARCH = x64
!ENDIF CPU == AMD64

WIX_FLAGS = \
	-dVCRedist.Location="$(VDREDIST_MERGE_MODULE)"

!IFDEF WITH_SSL
WIX_FLAGS = $(WIX_FLAGS) \
	-dwith_ssl=1
!ENDIF

!IFDEF WITH_PGSQL
WIX_FLAGS = $(WIX_FLAGS) \
	-dwith_pgsql=1
!ENDIF

!IFDEF WITH_SQLITE3
WIX_FLAGS = $(WIX_FLAGS) \
	-dwith_sqlite3=1
!ENDIF

!IFDEF WITH_LIBXML2
WIX_FLAGS = $(WIX_FLAGS) \
	-dwith_libxml2=1
!ENDIF

# TODO: must be probed, as well as the major versions of libintl and libiconv
# (or should it be rather in platform.mk?)
#WIX_FLAGS = $(WIX_FLAGS) \
#	-dpgdll_without_major_versions=1

WIX_EXTENSIONS = \
	-ext WixUIExtension -ext WixUtilExtension -ext WixFirewallExtension
	
CANDLE = "$(WIX_DIR)\bin\candle.exe"
LIGHT = "$(WIX_DIR)\bin\light.exe"
SMOKE = "$(WIX_DIR)\bin\smoke.exe"
SETUPBLD = "$(WIX_DIR)\bin\setupbld.exe"

WIX_OBJS = \
	wolframe.wixobj \
	WixUI_Wolframe.wixobj \
	dialogs\DatabaseSelect.wixobj

WIX_LOCALES = \
	-cultures:en-us -loc "i18n\en_us-wolframe.wxl"
	
.SUFFIXES: .wxs .wixobj

.wxs.wixobj:
	$(CANDLE) /nologo -o $@ -arch $(WIX_ARCH) $(WIX_FLAGS) $(WIX_EXTENSIONS) $<

local_all: wolframe.msi

wolframe.msi: $(WIX_OBJS)
	$(LIGHT) /nologo -o $@ $(WIX_FLAGS) $(WIX_EXTENSIONS) $(WIX_LOCALES) $**

setup.exe: wolframe.msi
	$(SETUPBLD) -out setup.exe -ms wolframe.msi -setup "$(WIX_DIR)\bin\setup.exe"

local_clean:
	@-erase *.wixobj wolframe.wixpdb wolframe.msi setup.exe 2>NUL

local_distclean:

local_test: wolframe.msi
	$(SMOKE) wolframe.msi

test_install:
	-del install.log
	-msiexec /lieva install.log /i Wolframe.msi

test_uninstall:
	-del uninstall.log
	-msiexec /lieva uninstall.log /x {09E1E9CC-6AE6-4207-B7FE-F47CFDB2861F}
	