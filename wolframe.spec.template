%define boost_version	1.46.0

%define initscript	wolframe.initd.RHEL
%define configFile	wolframe.conf

%define WOLFRAME_USR	wolframe
%define WOLFRAME_GRP	wolframe

Summary: Small and medium enterprise resource planning (Wolframe)
Name: Wolframe
Version: @VERSION@
Release: 0.1
License: Wolframe License
Group: Application/Business
Source: wolframe-%{version}.tar.bz2

URL: http://www.wolframe.com/

BuildRoot: %{_tmppath}/%{name}-root
Requires: expat >= 1.95
BuildRequires: zlib-devel >= 1.2.3
BuildRequires: openssl-devel >= 0.9.8
BuildRequires: bzip2-devel >= 1.0.3
BuildRequires: expat-devel >= 1.95
BuildRequires: postgresql84-devel >= 8.4

Distribution: rhel5
Vendor: Wolframe team
Packager: Mihai Barbos <mihai.barbos@gmail.com>

%description
The Wolframe server and server utilities


%package doc
Summary: Wolframe documentation
Group: Application/Business

%description doc
The Wolframe documentation.
This package contains the one file html documentation,
multiple file html documentation and the pdf documentation.


%package client
Summary: Wolframe client
Group: Application/Business

%description client
X client for the Wolframe server.


%prep
%setup


%build
LD_FLAGS=-Wl,-rpath=%{_libdir}/Wolframe make all

echo ======================= TESTING ==============================
# make test
echo ===================== END OF TESTING =========================


%install
rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

mkdir -p $RPM_BUILD_ROOT%{_libdir}/Wolframe
for i in \
	libboost_program_options.so.%{boost_version} libboost_system.so.%{boost_version} \
	libboost_filesystem.so.%{boost_version} libboost_iostreams.so.%{boost_version} \
	libboost_thread.so.%{boost_version} libboost_serialization.so.%{boost_version}; do
    cp /usr/local/lib/$i $RPM_BUILD_ROOT%{_libdir}/Wolframe/
done

mkdir -p $RPM_BUILD_ROOT%{_initrddir}
cp %{initscript} $RPM_BUILD_ROOT%{_initrddir}/%{name}


%clean
rm -rf $RPM_BUILD_ROOT


%pre
getent group %{WOLFRAME_GRP} >/dev/null || /usr/sbin/groupadd %{WOLFRAME_GRP}
getent passwd %{WOLFRAME_USR} >/dev/null || /usr/sbin/useradd -g %{WOLFRAME_GRP} %{WOLFRAME_USR} -c "Wolframe user" -d /dev/null

# Don't enable Wolframe server at install time, just inform root how this is done
echo
echo Use '/sbin/chkconfig --add wolframe' and '/sbin/ckconfig semrp on' to enable the
echo Wolframe server at startup
echo


%preun
if [ "$1" = 0 ]; then
    /etc/init.d/wolframe stop > /dev/null 2>&1
    /sbin/chkconfig --del wolframe
fi


%postun
if [ "$1" = 0 ]; then
    /usr/sbin/userdel %{WOLFRAME_USR}
fi


%files
%defattr( -, root, root )
%attr( 554, root, root) %{_initrddir}/%{name}
%{_sbindir}/wolframed
%dir %attr(0755, root, root) %{_sysconfdir}/wolframe
%config %attr(0755, root, root) %{_sysconfdir}/wolframe/wolframe.conf
%attr(0755, WOLFRAME_USR, WOLFRAME_GRP) %dir /var/log/wolframe
%attr(0755, WOLFRAME_USR, WOLFRAME_GRP) %dir /var/run/wolframe

%dir %{_libdir}/wolframe
%{_libdir}/wolframe/libpqxx-%{libpqxx_version}.so
%{_libdir}/wolframe/libboost_program_options.so.%{boost_version}
%{_libdir}/wolframe/libboost_system.so.%{boost_version}
%{_libdir}/wolframe/libboost_filesystem.so.%{boost_version}
%{_libdir}/wolframe/libboost_iostreams.so.%{boost_version}
%{_libdir}/wolframe/libboost_thread.so.%{boost_version}
%{_libdir}/wolframe/libboost_serialization.so.%{boost_version}

%dir %{_datadir}/wolframe
%doc LICENSE


%files doc


%files client


%changelog
* Sun Aug 29 2010 Mihai Barbos <mihai.barbos@gmail.com> 0.9.0-0.1
- preliminary release

