;************************************************************************
;
; Copyright (C) 2011 - 2014 Project Wolframe.
; All rights reserved.
;
; This file is part of Project Wolframe.
;
; Commercial Usage
;    Licensees holding valid Project Wolframe Commercial licenses may
;    use this file in accordance with the Project Wolframe
;    Commercial License Agreement provided with the Software or,
;    alternatively, in accordance with the terms contained
;    in a written agreement between the licensee and Project Wolframe.
;
; GNU General Public License Usage
;    Alternatively, you can redistribute this file and/or modify it
;    under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;
;    Wolframe is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with Wolframe.  If not, see <http://www.gnu.org/licenses/>.
;
; If you have questions regarding the use of this file, please contact
; Project Wolframe.
;
;************************************************************************
;

;Wolframe configuration file

LoadModules	{						; modules to be loaded by the server
;	directory modules

	module mod_audit_database
	module mod_audit_textfile
	module mod_auth_database
	module mod_auth_textfile

; enable for PAM authentication
;	module mod_auth_pam

; enable for authentication via SASL
;	module mod_auth_sasl

	module mod_authz_database

	module mod_filter_char
	module mod_filter_line
	module mod_filter_token

	module mod_filter_textwolf
;	module mod_filter_libxml2
}


ServerTokens		OS					; print the application name and
								; version in the initial greeting
								; allowed values are:
								;   ProductOnly, Major, Minor,
								;   Revision, OS, None
ServerSignature	"Wolframe"				; print the name of the server as
								; first element of the greeting

; .include modules.d/*.conf
.include modules.d/mod_db_postgresql.conf
.include modules.d/mod_db_sqlite3.conf

; .include conf.d/*.conf
.include conf.d/mod_db_postgresql.conf
.include conf.d/mod_db_sqlite3.conf

; Unix daemon parameters. This section is not valid for windows
daemon {
	user		wolframe
	group		wolframe
	pidFile		/var/run/wolframe/wolframed.pid
	serviceName	wolframe				; the name displayed in the list of processes
}

; Ports 7649-7671 and 7934-7966 are unassigned according to IANA (last updated 2010-03-11).
; Let's use 7660 for unencrypted connections and 7960 for SSL connections.
; Note that 7654 seems to be used by Winamp.
listen	{
	maxConnections	4					; Maximum number of simultaneous connections (clients).
								; Default is the OS limit. This is the global (total) value.
								; Set it to 0 to disable (to use the system limit)
	threads		4					; Number of threads for serving client connections.
								; Default 4
	socket	{
		address		*
		port		7661
		maxConnections	2				; Maximum number of simultaneous connections (clients)
								; for this socket. Default is the OS limit.
	}
	socket	{
		address		localhost
;		address		::1
		port		7662
		identifier	"Interface 1"			; Interfaces can be named for AAA purposes
	}

; create certificates for secure connection, then enable this session
;	SSLsocket	{
;		address		0.0.0.0
;		port		7961
;		identifier	"Interface 1"			; Many interfaces can have the same identifier and
;								; they can be referred as one group in AAAA
;		; SSL parameters: required if SSLsocket is defined
;		certificate	/etc/ssl/certs/wolframed.crt	; Server certificate file (PEM)
;		key		/etc/ssl/private/wolframed.key	; Server key file (PEM)
;		CAdirectory	../tests/SSL/CAdir		; Directory holding CA certificate files
;		CAchainFile	/etc/ssl/certs/ca.pem		; SSL CA chain file
;		verify		ON				; Require and verify client certificate
;	}
;	SSLsocket	{
;		address		127.0.0.1
;		port		7962
;		identifier	"Interface 2"
;		maxConnections	2
;		certificate	/etc/ssl/certs/wolframed.crt
;		key		/etc/ssl/private/wolframed.key
;		; CAdirectory	../tests/SSL/CAdir		; It's not necessary to define both
;		CAchainFile	/etc/ssl/certs/ca.pem		; CAdirectory and CAchainFile.
;		verify		OFF
;	}
}

; Logging configuration
logging	{
	; log level for console (stderr) logging
	stderr	{
		level	INFO
	}

	; log level for file logging
	logFile	{
		filename	/var/log/wolframe/wolframed.log
		level		NOTICE
	}

	; syslog facility, identifier and log level
	syslog	{
		ident		wolframed
		facility	LOCAL2
		level		INFO
	}
}

; Authentication, authorization, auditing and accounting configuration
AAAA	{
	authentication	{
;		randomDevice	/dev/urandom
;		database	{
;			identifier	"PostgreSQL database authentication"
;			database	pgdb
;		}
;		database	{
;			identifier	"SQLite database authentication"
;			database	sqlitedb
;		}
;		TextFile	{
;			identifier	"Text file authentication"
;			file		../var/tmp/wolframe.auth
;		}
;		PAM	{
;			identifier	"PAM authentication"
;			service		wolframe
;			}
;		SASL		{
;			identifier	"SASL authentication"
;			service		wolframe
;			confPath	sasl.conf
;		}
	}

	Authorization	{
		default		allow				; what to do when there is no
								; authorization information
;		database	{
;			identifier	"PostgreSQL database authorization"
;			database	pgdb
;		}
;		database	{
;			identifier	"SQLite database authorization"
;			database	sqlitedb
;		}
	}

	Audit	{
;		mandatory	yes				; Audit is mandatory ? If set to yes,
								; operations will fail if audit fails
		TextFile	{
			required	yes
			file		../var/tmp/wolframe.audit
		}
;		Database	{
;			required	no
;			database	sqlitedb
;		}
	}
	; There is no configuration for accounting as it
	; should be derived from audit information
}

; Data Processing Configuration
Processor	{
;	program			../tests/programs/first.prg	; global program files
;	program			../tests/programs/second.prg
;	database		pgdb
;	database		sqlitedb
;	EchoProcessor	{
;		timeout		10
;		defaultOp	echo
;	}
}
