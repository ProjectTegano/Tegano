; Wolframe configuration file

; Modules installed via packages, loaded in those code snippets
.include modules.d/*.conf

; Configuration of modules in packages
.include conf.d/*.conf

; Modules to be loaded (bundled with the wolframe core package)
LoadModules {

; Search also for modules in the following directory additionally to
; the default load dir (with lower priority). Can be absolute or relative,
; if relative it has this configuration file as basis to compute the path
;    Directory modules

    Module mod_auth_textfile
    Module mod_auth_database

    Module mod_audit_textfile
    Module mod_audit_database

    Module mod_authz_database
    
    Module mod_doctype_xml
    Module mod_doctype_json

    Module mod_filter_char
    Module mod_filter_line
    Module mod_filter_token
    Module mod_filter_blob
	
    Module mod_filter_textwolf
	
    Module mod_normalize_locale
    Module mod_normalize_string
    Module mod_normalize_base64
    Module mod_normalize_number
	
    Module mod_datatype_datetime
    Module mod_datatype_bcdnumber
	
    Module mod_ddlcompiler_simpleform
    Module mod_command_directmap
}

; Print the application name and version in the initial greeting
; allowed values are: ProductOnly, Major, Minor, Revision, OS, None
; Default: None
ServerTokens OS					

; Print the name of the server as first element of the greeting
; Default: empty
ServerSignature "Wolframe"

; Unix daemon parameters
Daemon {

; user and group to run the daemon
    User wolframe
    Group wolframe

; daemon lockfile
    PidFile /var/run/wolframe/wolframed.pid
}

; Ports 7649-7671 and 7934-7966 are unassigned according to IANA (last updated 2010-03-11).
; Let's use 7660 for unencrypted connections and 7960 for SSL connections.
; Note that 7654 seems to be used by Winamp.
listen	{
	maxConnections	4					; Maximum number of simultaneous connections (clients).
								; Default is the OS limit. This is the global (total) value.
								; Set it to 0 to disable (to use the system limit)
	threads		4					; Number of threads for serving client connections.
								; Default 4
	socket	{
		address		*
		port		7661
		maxConnections	2				; Maximum number of simultaneous connections (clients)
								; for this socket. Default is the OS limit.
	}
	socket	{
		address		localhost
;		address		::1
		port		7662
		identifier	"Interface 1"			; Interfaces can be named for AAA purposes
	}

; create certificates for secure connection, then enable this session
;	SSLsocket	{
;		address		0.0.0.0
;		port		7961
;		identifier	"Interface 1"			; Many interfaces can have the same identifier and
;								; they can be referred as one group in AAAA
;		; SSL parameters: required if SSLsocket is defined
;		certificate	/etc/ssl/certs/wolframed.crt	; Server certificate file (PEM)
;		key		/etc/ssl/private/wolframed.key	; Server key file (PEM)
;		CAdirectory	../tests/SSL/CAdir		; Directory holding CA certificate files
;		CAchainFile	/etc/ssl/certs/ca.pem		; SSL CA chain file
;		verify		ON				; Require and verify client certificate
;	}
;	SSLsocket	{
;		address		127.0.0.1
;		port		7962
;		identifier	"Interface 2"
;		maxConnections	2
;		certificate	/etc/ssl/certs/wolframed.crt
;		key		/etc/ssl/private/wolframed.key
;		; CAdirectory	../tests/SSL/CAdir		; It's not necessary to define both
;		CAchainFile	/etc/ssl/certs/ca.pem		; CAdirectory and CAchainFile.
;		verify		OFF
;	}
}

; Logging configuration
logging	{
	; log level for console (stderr) logging
	stderr	{
		level	INFO
	}

	; log level for file logging
	logFile	{
		filename	/var/log/wolframe/wolframed.log
		level		NOTICE
	}

	; syslog facility, identifier and log level
	syslog	{
		ident		wolframed
		facility	LOCAL2
		level		INFO
	}
}

; Authentication, authorization, auditing and accounting configuration
AAAA {
    Authentication {
        RandomDevice /dev/urandom
;		database	{
;			identifier	"PostgreSQL database authentication"
;			database	pgdb
;		}
;		database	{
;			identifier	"SQLite database authentication"
;			database	sqlitedb
;		}
;		TextFile	{
;			identifier	"Text file authentication"
;			file		../var/tmp/wolframe.auth
;		}
	}

	Authorization	{
		default		allow				; what to do when there is no
								; authorization information
;		database	{
;			identifier	"PostgreSQL database authorization"
;			database	pgdb
;		}
;		database	{
;			identifier	"SQLite database authorization"
;			database	sqlitedb
;		}
	}

	Audit	{
;		mandatory	yes				; Audit is mandatory ? If set to yes,
								; operations will fail if audit fails
		TextFile	{
			required	yes
			file		../var/tmp/wolframe.audit
		}
;		Database	{
;			required	no
;			database	sqlitedb
;		}
	}
	; There is no configuration for accounting as it
	; should be derived from audit information
}

; Data Processing Configuration
Processor	{
;	program			../tests/programs/first.prg	; global program files
;	program			../tests/programs/second.prg
;	database		pgdb
;	database		sqlitedb
;	EchoProcessor	{
;		timeout		10
;		defaultOp	echo
;	}
}
