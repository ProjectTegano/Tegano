diff --git a/src/acceptor.cpp b/src/acceptor.cpp
index 722bf9c..b3b4971 100644
--- a/src/acceptor.cpp
+++ b/src/acceptor.cpp
@@ -136,9 +136,14 @@ void acceptor::handleStop()
 	LOG_DEBUG << "Closed acceptor for " << m_identifier;
 	// at this point no more connections are accepted
 	// Signal the list of processors to terminate
-	connection_ptr conn;
-	while (( conn = m_connList.pop()) != NULL )
-		conn->signal();
+	std::list<connection_ptr>::iterator ci = m_connList.begin(), cn, ce = m_connList.end();
+	while (ci != ce)
+	{
+		cn = ci; ++cn;
+		(*ci)->signal();
+		ci->reset();
+		ci = cn;
+	}
 }
 
 
@@ -274,9 +279,14 @@ void SSLacceptor::handleStop()
 	LOG_DEBUG << "Closed acceptor for " << m_identifier;
 	// at this point no more connections are accepted
 	// Signal the list of processors to terminate
-	SSLconnection_ptr conn;
-	while (( conn = m_connList.pop()) != NULL )
-		conn->signal();
+	std::list<SSLconnection_ptr>::iterator ci = m_connList.begin(), cn, ce = m_connList.end();
+	while (ci != ce)
+	{
+		cn = ci; ++cn;
+		(*ci)->signal();
+		ci->reset();
+		ci = cn;
+	}
 }
 
 #endif // WITH_SSL
diff --git a/src/connection.cpp b/src/connection.cpp
index 599415a..cd1767b 100644
--- a/src/connection.cpp
+++ b/src/connection.cpp
@@ -118,7 +118,8 @@ connection::connection( boost::asio::io_service& IOservice,
 			ConnectionHandler* handler ) :
 	ConnectionBase< boost::asio::ip::tcp::socket >( IOservice, handler ),
 	m_socket( IOservice ),
-	m_connList( connList )
+	m_connList( connList ),
+	m_connInserted( false )
 {
 	LOG_TRACE << "New connection created";
 }
@@ -129,6 +130,7 @@ connection::~connection()
 		LOG_TRACE << "Connection (unconnected) destroyed";
 	else
 		LOG_TRACE << "Connection to " << m_ID <<" destroyed";
+	if (m_connInserted) m_connList.erase( m_connRef);
 }
 
 
@@ -180,7 +182,8 @@ SSLconnection::SSLconnection( boost::asio::io_service& IOservice,
 			      ConnectionHandler *handler ) :
 	ConnectionBase< ssl_socket >( IOservice, handler ),
 	m_SSLsocket( IOservice, SSLcontext ),
-	m_connList( connList )
+	m_connList( connList ),
+	m_connInserted( false )
 {
 	LOG_TRACE << "New SSL connection created";
 }
@@ -191,6 +194,7 @@ SSLconnection::~SSLconnection()
 		LOG_TRACE << "SSL connection (unconnected) destroyed";
 	else
 		LOG_TRACE << "Connection to " << m_ID <<" destroyed";
+	if (m_connInserted) m_connList.erase( m_connRef);
 }
 
 
diff --git a/src/connection.hpp b/src/connection.hpp
index 133b47f..a0f085e 100644
--- a/src/connection.hpp
+++ b/src/connection.hpp
@@ -109,36 +109,22 @@ public:
 	{
 		{
 			boost::mutex::scoped_lock lock( m_mutex );
-			m_connList.push_back( conn );
+			m_connList.push_front( conn );
 			++m_connListSize;
+			conn->m_connRef = m_connList.begin();
+			conn->m_connInserted = true;
 		}
 		LOG_DATA << "PUSH - Connections on socket: " << m_connListSize << " of maximum " << m_maxConn << ", " << conn->toString();
 	}
 
-	void remove( T conn )
+	void erase( typename std::list<T>::iterator connref )
 	{
 		{
 			boost::mutex::scoped_lock lock( m_mutex );
-			m_connList.remove( conn );
+			m_connList.erase( connref );
 			--m_connListSize;
 		}
-		LOG_DATA << "REMOVE - Connections on socket: " << m_connListSize << " of maximum " << m_maxConn << ", " << conn->toString();
-	}
-
-	T pop()
-	{
-		T conn;
-		LOG_DATA << "POP - Connections on socket: " << m_connListSize << " of maximum " << m_maxConn;
-		{
-			boost::mutex::scoped_lock lock( m_mutex );
-			if ( m_connList.empty() )
-				return T();
-			conn = m_connList.front();
-			m_connList.pop_front();
-			--m_connListSize;
-		}
-		LOG_DATA << "POP - Connection " << conn->toString();
-		return conn;
+		LOG_DATA << "REMOVE - Connections on socket: " << m_connListSize << " of maximum " << m_maxConn;
 	}
 
 	bool isFull()	{
@@ -152,6 +138,11 @@ public:
 		}
 	}
 
+	typename std::list< T >::iterator begin()		{return m_connList.begin();}
+	typename std::list< T >::iterator end()			{return m_connList.end();}
+	typename std::list< T >::const_iterator begin() const	{return m_connList.begin();}
+	typename std::list< T >::const_iterator end() const	{return m_connList.end();}
+
 private:
 	std::list< T >		m_connList;
 	std::size_t		m_connListSize;
@@ -180,7 +171,7 @@ public:
 
 	/// Unregister the connection from the list of active connections
 	void unregister()	{
-		m_connList.remove( boost::static_pointer_cast<connection>( shared_from_this()) );
+		m_connRef->reset();
 	}
 
 	std::string toString() const;
@@ -191,6 +182,9 @@ private:
 
 	/// List of connections to which it belongs
 	SocketConnectionList<connection_ptr>&	m_connList;
+	friend class SocketConnectionList<connection_ptr>;
+	typename std::list<connection_ptr>::iterator m_connRef;
+	bool m_connInserted;
 };
 
 
@@ -218,7 +212,7 @@ public:
 
 	/// Unregister the connection from the list of active connections
 	void unregister()	{
-		m_connList.remove( boost::static_pointer_cast<SSLconnection>( shared_from_this()) );
+		m_connRef->reset();
 	}
 
 	std::string toString() const;
@@ -232,6 +226,9 @@ private:
 
 	/// List of connections to which it belongs
 	SocketConnectionList<SSLconnection_ptr>& m_connList;
+	friend class SocketConnectionList<SSLconnection_ptr>;
+	typename std::list<SSLconnection_ptr>::iterator m_connRef;
+	bool m_connInserted;
 };
 
 #endif // WITH_SSL
