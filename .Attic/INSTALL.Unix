Old Build Instructions for Unixes
=================================

Table of Contents
-----------------

  Broken and non-working instructions for other Unixes
    OpenBSD 5.1
    NetBSD 5.1
    Solaris 10 (SFW gcc toolchain)
    Solaris 10 (Sun Forte toolchain)
    Solaris 10 (Sunfreeware GCC toolchain)
  Deprecated Platforms
    Fedora 14
    Fedora 15
    Debian 5.0
    Ubuntu 10.10
    OpenSuSE 11.3

Broken and non-working instructions for other Unixes
----------------------------------------------------

Those are other unsuccessful builds on Solaris 10, mainly due to
too old C++ compilers or boost.

OpenBSD has only boost 1.42, which is too old.
NetBSD has an old boost 1.47.

OpenBSD 5.1
-----------

Required packages: boost (1.42.0p12)
Optional packages: cyrus-sasl2 (from ports tree, 2.1.25p2, install
                   dependencies like groff before building it!),
                   qt4 (qt4-4.7.4p3),
                   sqlite3 (3.7.9p0), postgresql-client (9.1.2),
                   libxml (2.7.8p4), libxslt (1.1.26p3),
                   png (1.5.6p0) 

You need 'gmake' (3.82).

For NLS support you need 'libintl' and 'gettext'.

OpenBSD has no PAM, but BSD Authentication, which is currently not
supported by Wolframe.

OpenBSD contains SSL libraries per default no packages needed.

For some optional packages you need the OpenBSD ports tree and
you have to build the packages on your own.

For testing you need 'expect-5.44.1.15p0-no_tk'.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

NetBSD 5.1
----------

(Packages are all from pkgsrc)

Required packages: boost-headers (1.47.0), boost-libs (1.47.0)
Optional packages: cyrus-sasl (2.1.25), qt4 (4.7.4),
                   sqlite3 (3.7.9), postgresql91-client (9.1.2),
                   libxml2 (2.7.8nb8), libxslt (1.1.26nb1),
                   zlib (1.2.3), png (1.5.9)

You need 'gmake' (3.82db3).

NetBSD contains SSL libraries per default no packages needed.
Also PAM modules.

For testing you need 'tcl-expect' (5.43.0nb1).

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

Solaris 10 (SFW gcc toolchain)
------------------------------

CAREFUL: NOT WORKING!! COMPILER TOO OLD..
         visibility problems in XXXprovider.cpp
         lots of C++ compatibility issues, gcc 3.4.3 is

You need 'gcc' and 'gmake' from the companion CD (packages
'SUNWgcc' 3.4.6 and 'SUNWgmake' 3.80).

Make sure the build environment is always set as follows:

PATH=/usr/sfw/bin:/usr/ccs/bin:/usr/bin:/bin:/usr/sfw/sbin:/usr/sbin:/sbin
export PATH

Boost has to be compiled from scratch.

First apply the following patch to 'boost/cstdint.ppp':

...
namespace boost
{

#if defined(sun) || defined(__sun) 
  typedef signed char int8_t;
#else
  using ::int8_t;             
#endif  
..

Build and install normally:

./bootstrap.sh --prefix=/usr/local/boost-1.48.0 \
	--with-libraries=thread,filesystem,system,program_options,date_time
./b2 -d2 install

LibXML2 and LibXSLT are there per default (packages 'SMClxml' and 'SMClxslt') and
are installed in '/usr'.

Install optional packages from the companion CD:


Specify pathes for all third party software you want to include in the build

SQLITE3_DIR=/usr/sfw PGSQL_DIR=/usr/sfw LIBXML2_DIR=/usr/ LIBXSLT_DIR=/usr \
OPENSSL_DIR=/usr/sfw BOOST_DIR=/usr/local/boost-1.48.0 \
	gmake \
	WITH_SSL=1 WITH_SQLITE3=1 WITH_PGSQL=1 WITH_LUA=1 WITH_LIBXML2=1 WITH_LIBXSLT=1 \
	CC=gcc CXX=g++

Problems you may encounter during the build:

* In Lua:

  "visibility attribute not supported in this configuration; ignored"

  This can be ignored

* gmake 3.80 has problems with the dependency include snippets, so the
  dependencies may not be respected. A complete build should work though:

  "../makefiles/gmake/depend.mk:42: no file name for `-include'"


Solaris 10 (Sun Forte toolchain)
--------------------------------

CAREFUL: NOT WORKING!! COMPILER TOO BUGGY..
         Also boost is not really well tested on Solaris with Forte,
         furthermore many tests fail (especially asio!)

You need the Sun Forte Compiler (e.g. SunStudio 12.1).
You need GNU tar to unpack boost-1.48.0.tar.gz.

Set your path so that boost build can find the compiler:

export PATH=/opt/sunstudio12.1/bin:/usr/ccs/bin:${PATH}

Build boost with the sun toolset:

./bootstrap.sh --prefix=/usr/local/boost-1.48.0 \
	--with-toolset=sun \
	--with-libraries=thread,filesystem,system,program_options,date_time

Problems:

Boost tarfile can't be unpacked

/usr/local/bin/tar: Archive value 4294967295 is out of gid_t range -2147483648..2147483647

Those messages can be ignored.

Some @LongLinks may appear, though using a GNU tar.

TODO from here:

BOOST_DIR=/usr/local/boost-1.48.0 make CC=cc CXX=CC WITH_SSL=1 WITH_EXPECT=1 WITH_QT=1 WITH_PAM=1 WITH_SASL=1      WITH_SQLITE3=1 WITH_PGSQL=1 WITH_LUA=1 WITH_LIBXML2=1 WITH_LIBXSLT=1

Solaris 10 (Sunfreeware GCC toolchain)
--------------------------------------

CAREFUL: NOT WORKING!! COMPILER TOO OLD..
         visibility problems in XXXprovider.cpp
         lots of C++ compatibility issues, gcc 3.4.3 is

You neeed 'gmake' (3.81) and 'gcc' (3.4.6). Be careful with the PATH
settings so that 'make' is the GNU make and not the native one
'/usr/ccs/bin/make'. Best ist to install Sunfreeware in '/usr/local'
and set the pathes before building as follows:

PATH=/usr/local/bin:/usr/local/ssl/bin:/usr/ccs/bin:/usr/bin:/bin:/usr/local/bin:/opt/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/sbin
LD_LIBRARY_PATH=/usr/local/lib:/usr/local/ssl/lib:/usr/local/apr/lib
export PATH
export LD_LIBRARY_PATH

Boost has to be compiled from scratch.

Get packages from sunfreeware.com (as long it still exists):

Optional packages: sqlite (SMCsqlite, 3.7.2), postgresql (SMCpgsql, 9.1.0)

#qt4-gui (4.7.1), openpam, cyrus-sasl (2.1.23)
#                 libxml2 (2.7.8)

problems you may have:

visibility attribute not supported in this configuration; ignored

Deprecated Platforms
--------------------

Deprecated platforms usually reached their end of life. Compile and run Wolframe
here at your own risk! Only older versions are still compilable, newer one miss
the platform support in 'makefiles/gmake/platform.mk'. Backporting may be possible,
but not guaranteed.

Debian 5.0
----------

Optional packages: libqt4-dev, libpam-dev (1.0.1),
                   libsasl2-dev (2.1.22), libsqlite3-dev (3.5.9),
                   libpq-dev (8.3.14), libxml2-dev (2.6.32),
                   libxslt1-dev (1.1.24), libpng12-dev (1.2.27),
                   zlib1g-dev (1.2.3.3)

libbost-dev is 1.34, far too old. Compile your own version.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

Fedora 14
---------

Required pacakges: boost-devel (1.44)
Optional packages: openssl-devel, qt4-devel,
                   pam-devel (1.1.1), cyrus-sasl-devel (2.1.23),
                   sqlite-devel (3.6.23), postgresql-devel (8.4.7),
                   libxml2-devel (2.7.7), libxslt-devel (1.1.26),
                   libpng-devel (1.2.46), zlib-devel (1.2.5),
                   libicu-devel (4.4.1)

Boost is 1.44, but depending on the patch level boost filestystem exists only in
version 2, not in version 3. Build your own one if you get linking problems around
boost::filestystem3:: symbols.

If you need boost-locale with ICU support you have to compile your own boost library.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

Fedora 15 
---------

No problems with the supplied packages at all, everything builds out of the box:

Required pacakges: boost-devel (1.46.1)
Optional packages: openssl-devel (0.9.8h), qt4-devel (4.7.2),
                   pam-devel (1.1.3), cyrus-sasl-devel (2.1.23),
                   sqlite-devel (3.7.5), postgresql-devel (9.0.4),
                   libpng-devel (1.2.44), zlib-devel (1,2,5),
                   libicu-devel (4.4.2)

If you need boost-locale with ICU support you have to compile your own boost library.

Use WITH_LOCAL_LIBHPDF=1 for PDF support.

For building the documentation you need 'libxslt', 'docbook-style-xsl' and 'doxygen'.
For building the PDF wolfbook install 'fop'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

Ubuntu 10.10
------------

Optional packages: libssl-dev, libqt4-dev (4.7.0),
                   libpam-dev (1.1.1), libsasl2-dev (2.1.23),
                   libsqlite3-dev (3.7.2), libpq-dev (8.4.7),
                   libxml2-dev (2.7.7)

libboost-dev is 1.42, only missing some new filesystem stuff, but you'll have to
compile your own one.

For building the documentation you need 'xsltproc', 'docbook-xsl' and 'doxygen'.

When rebuilding the SVG images of the documentation you also need 'dia'.

For running non-gtest tests you need 'expect'.

For running the Sasl AAAA tests you need 'sasl2-bin'.

For checking the validity of various XML files you need 'libxml2-utils' (for xmllint).

OpenSuSE 11.3
-------------

Optional packages: qt-devel (4.6.3), pam-devel (1.1.1), cyrus-sasl-devel (2.1.23),
                   sqlite3-devel (3.6.23), postgresql-devel (8.4.7)

boost is 1.42, only missing some new filesystem stuff, but you'll have to
compile your own one.

